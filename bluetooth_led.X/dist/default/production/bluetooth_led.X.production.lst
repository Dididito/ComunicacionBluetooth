

Microchip Technology PIC18 LITE Macro Assembler V1.32 build 58300 
                                                                                               Wed Nov 12 10:17:12 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    19                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    24                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    25  0000                     
    26                           	psect	idataCOMRAM
    27  000B4A                     __pidataCOMRAM:
    28                           	opt stack 0
    29                           
    30                           ;initializer for _MensajeTx
    31  000B4A  43                 	db	67
    32  000B4B  4F                 	db	79
    33  000B4C  4D                 	db	77
    34  000B4D  55                 	db	85
    35  000B4E  4E                 	db	78
    36  000B4F  49                 	db	73
    37  000B50  43                 	db	67
    38  000B51  41                 	db	65
    39  000B52  43                 	db	67
    40  000B53  49                 	db	73
    41  000B54  4F                 	db	79
    42  000B55  4E                 	db	78
    43  000B56  20                 	db	32
    44  000B57  53                 	db	83
    45  000B58  41                 	db	65
    46  000B59  54                 	db	84
    47  000B5A  49                 	db	73
    48  000B5B  53                 	db	83
    49  000B5C  46                 	db	70
    50  000B5D  41                 	db	65
    51  000B5E  43                 	db	67
    52  000B5F  54                 	db	84
    53  000B60  4F                 	db	79
    54  000B61  52                 	db	82
    55  000B62  49                 	db	73
    56  000B63  41                 	db	65
    57  000B64  00                 	db	0
    58  0000                     _BAUDCON	set	4024
    59  0000                     _INTCONbits	set	4082
    60  0000                     _PIE1	set	3997
    61  0000                     _PIE1bits	set	3997
    62  0000                     _PIR1bits	set	3998
    63  0000                     _PORTCbits	set	3970
    64  0000                     _RCREG	set	4014
    65  0000                     _RCSTA	set	4011
    66  0000                     _RCSTAbits	set	4011
    67  0000                     _SPBRG	set	4015
    68  0000                     _SPBRGH	set	4016
    69  0000                     _TRISC	set	3988
    70  0000                     _TRISCbits	set	3988
    71  0000                     _TXREG	set	4013
    72  0000                     _TXSTA	set	4012
    73  0000                     _TXSTAbits	set	4012
    74                           
    75                           	psect	smallconst
    76  000800                     __psmallconst:
    77                           	opt stack 0
    78  000800  00                 	db	0
    79  000801                     __stringdata:
    80                           	opt stack 0
    81  000801                     STR_1:
    82  000801  0A                 	db	10
    83  000802  0D                 	db	13
    84  000803  45                 	db	69	;'E'
    85  000804  6E                 	db	110	;'n'
    86  000805  76                 	db	118	;'v'
    87  000806  69                 	db	105	;'i'
    88  000807  61                 	db	97	;'a'
    89  000808  64                 	db	100	;'d'
    90  000809  6F                 	db	111	;'o'
    91  00080A  3A                 	db	58	;':'
    92  00080B  20                 	db	32
    93  00080C  00                 	db	0
    94  00080D                     __end_of__stringdata:
    95                           	opt stack 0
    96                           
    97                           ; #config settings
    98  00080D  00                 	db	0	; dummy byte at the end
    99  0000                     
   100                           	psect	cinit
   101  000AFE                     __pcinit:
   102                           	opt stack 0
   103  000AFE                     start_initialization:
   104                           	opt stack 0
   105  000AFE                     __initialization:
   106                           	opt stack 0
   107                           
   108                           ; Clear objects allocated to COMRAM (2 bytes)
   109  000AFE  6A41               	clrf	(__pbssCOMRAM+1)& (0+255),c
   110  000B00  6A40               	clrf	__pbssCOMRAM& (0+255),c
   111                           
   112                           ; Initialize objects allocated to COMRAM (27 bytes)
   113                           ; load TBLPTR registers with __pidataCOMRAM
   114  000B02  0E4A               	movlw	low __pidataCOMRAM
   115  000B04  6EF6               	movwf	tblptrl,c
   116  000B06  0E0B               	movlw	high __pidataCOMRAM
   117  000B08  6EF7               	movwf	tblptrh,c
   118  000B0A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   119  000B0C  6EF8               	movwf	tblptru,c
   120  000B0E  EE00  F025         	lfsr	0,__pdataCOMRAM
   121  000B12  EE10 F01B          	lfsr	1,27
   122  000B16                     copy_data0:
   123  000B16  0009               	tblrd		*+
   124  000B18  CFF5 FFEE          	movff	tablat,postinc0
   125  000B1C  50E5               	movf	postdec1,w,c
   126  000B1E  50E1               	movf	fsr1l,w,c
   127  000B20  E1FA               	bnz	copy_data0
   128  000B22                     end_of_initialization:
   129                           	opt stack 0
   130  000B22                     __end_of__initialization:
   131                           	opt stack 0
   132  000B22  0E00               	movlw	low (__Lmediumconst shr (0+16))
   133  000B24  6EF8               	movwf	tblptru,c
   134  000B26  0100               	movlb	0
   135  000B28  EF2E  F005         	goto	_main	;jump to C main() function
   136                           tblptru	equ	0xFF8
   137                           tblptrh	equ	0xFF7
   138                           tblptrl	equ	0xFF6
   139                           tablat	equ	0xFF5
   140                           postinc0	equ	0xFEE
   141                           postdec1	equ	0xFE5
   142                           fsr1l	equ	0xFE1
   143                           
   144                           	psect	bssCOMRAM
   145  000040                     __pbssCOMRAM:
   146                           	opt stack 0
   147  000040                     _CaracterRx:
   148                           	opt stack 0
   149  000040                     	ds	1
   150  000041                     _USART_Status:
   151                           	opt stack 0
   152  000041                     	ds	1
   153                           tblptru	equ	0xFF8
   154                           tblptrh	equ	0xFF7
   155                           tblptrl	equ	0xFF6
   156                           tablat	equ	0xFF5
   157                           postinc0	equ	0xFEE
   158                           postdec1	equ	0xFE5
   159                           fsr1l	equ	0xFE1
   160                           
   161                           	psect	dataCOMRAM
   162  000025                     __pdataCOMRAM:
   163                           	opt stack 0
   164  000025                     _MensajeTx:
   165                           	opt stack 0
   166  000025                     	ds	27
   167                           tblptru	equ	0xFF8
   168                           tblptrh	equ	0xFF7
   169                           tblptrl	equ	0xFF6
   170                           tablat	equ	0xFF5
   171                           postinc0	equ	0xFEE
   172                           postdec1	equ	0xFE5
   173                           fsr1l	equ	0xFE1
   174                           
   175                           	psect	cstackCOMRAM
   176  000001                     __pcstackCOMRAM:
   177                           	opt stack 0
   178  000001                     ReadUSART@data:
   179                           	opt stack 0
   180  000001                     i2WriteUSART@data:
   181                           	opt stack 0
   182                           
   183                           ; 1 bytes @ 0x0
   184  000001                     	ds	1
   185  000002                     i2putsUSART@data:
   186                           	opt stack 0
   187                           
   188                           ; 2 bytes @ 0x1
   189  000002                     	ds	2
   190  000004                     ??i2_putsUSART:
   191                           
   192                           ; 0 bytes @ 0x3
   193  000004                     	ds	2
   194  000006                     ??_Interrupcion:
   195                           
   196                           ; 0 bytes @ 0x5
   197  000006                     	ds	14
   198  000014                     ?___awdiv:
   199                           	opt stack 0
   200  000014                     baudUSART@baudconfig:
   201                           	opt stack 0
   202  000014                     WriteUSART@data:
   203                           	opt stack 0
   204  000014                     OpenUSART@spbrg:
   205                           	opt stack 0
   206  000014                     ___awdiv@dividend:
   207                           	opt stack 0
   208                           
   209                           ; 2 bytes @ 0x13
   210  000014                     	ds	1
   211  000015                     putsUSART@data:
   212                           	opt stack 0
   213                           
   214                           ; 2 bytes @ 0x14
   215  000015                     	ds	1
   216  000016                     ??_OpenUSART:
   217  000016                     ___awdiv@divisor:
   218                           	opt stack 0
   219                           
   220                           ; 2 bytes @ 0x15
   221  000016                     	ds	1
   222  000017                     ??_putsUSART:
   223                           
   224                           ; 0 bytes @ 0x16
   225  000017                     	ds	1
   226  000018                     ___awdiv@counter:
   227                           	opt stack 0
   228                           
   229                           ; 1 bytes @ 0x17
   230  000018                     	ds	1
   231  000019                     OpenUSART@config:
   232                           	opt stack 0
   233  000019                     ___awdiv@sign:
   234                           	opt stack 0
   235                           
   236                           ; 1 bytes @ 0x18
   237  000019                     	ds	1
   238  00001A                     ___awdiv@quotient:
   239                           	opt stack 0
   240                           
   241                           ; 2 bytes @ 0x19
   242  00001A                     	ds	2
   243  00001C                     x_delay_ms@x:
   244                           	opt stack 0
   245                           
   246                           ; 2 bytes @ 0x1B
   247  00001C                     	ds	2
   248  00001E                     ??_x_delay_ms:
   249                           
   250                           ; 0 bytes @ 0x1D
   251  00001E                     	ds	1
   252  00001F                     x_delay_ms@cont:
   253                           	opt stack 0
   254                           
   255                           ; 2 bytes @ 0x1E
   256  00001F                     	ds	2
   257  000021                     main@spbrg:
   258                           	opt stack 0
   259                           
   260                           ; 2 bytes @ 0x20
   261  000021                     	ds	2
   262  000023                     main@config:
   263                           	opt stack 0
   264                           
   265                           ; 1 bytes @ 0x22
   266  000023                     	ds	1
   267  000024                     main@baudconfig:
   268                           	opt stack 0
   269                           
   270                           ; 1 bytes @ 0x23
   271  000024                     	ds	1
   272                           tblptru	equ	0xFF8
   273                           tblptrh	equ	0xFF7
   274                           tblptrl	equ	0xFF6
   275                           tablat	equ	0xFF5
   276                           postinc0	equ	0xFEE
   277                           postdec1	equ	0xFE5
   278                           fsr1l	equ	0xFE1
   279                           
   280 ;;
   281 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   282 ;;
   283 ;; *************** function _main *****************
   284 ;; Defined at:
   285 ;;		line 21 in file "main.c"
   286 ;; Parameters:    Size  Location     Type
   287 ;;		None
   288 ;; Auto vars:     Size  Location     Type
   289 ;;  spbrg           2   32[COMRAM] unsigned int 
   290 ;;  baudconfig      1   35[COMRAM] unsigned char 
   291 ;;  config          1   34[COMRAM] unsigned char 
   292 ;; Return value:  Size  Location     Type
   293 ;;		None               void
   294 ;; Registers used:
   295 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, cstack
   296 ;; Tracked objects:
   297 ;;		On entry : 0/0
   298 ;;		On exit  : 0/0
   299 ;;		Unchanged: 0/0
   300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   301 ;;      Params:         0       0       0       0       0       0       0       0       0
   302 ;;      Locals:         4       0       0       0       0       0       0       0       0
   303 ;;      Temps:          0       0       0       0       0       0       0       0       0
   304 ;;      Totals:         4       0       0       0       0       0       0       0       0
   305 ;;Total ram usage:        4 bytes
   306 ;; Hardware stack levels required when called:    5
   307 ;; This function calls:
   308 ;;		_OpenUSART
   309 ;;		_baudUSART
   310 ;;		_putsUSART
   311 ;;		_x_delay_ms
   312 ;; This function is called by:
   313 ;;		Startup code after reset
   314 ;; This function uses a non-reentrant model
   315 ;;
   316                           
   317                           	psect	text0
   318  000A5C                     __ptext0:
   319                           	opt stack 0
   320  000A5C                     _main:
   321                           	opt stack 26
   322                           
   323                           ;main.c: 23: TRISC = 0b00000000;
   324                           
   325                           ;incstack = 0
   326  000A5C  0E00               	movlw	0
   327  000A5E  6E94               	movwf	3988,c	;volatile
   328                           
   329                           ;main.c: 25: RCSTA&=0b01001111,TXSTAbits.TXEN=0,PIE1&=0b11001111;
   330  000A60  0E4F               	movlw	79
   331  000A62  16AB               	andwf	4011,f,c	;volatile
   332  000A64  9AAC               	bcf	4012,5,c	;volatile
   333  000A66  0ECF               	movlw	207
   334  000A68  169D               	andwf	3997,f,c	;volatile
   335                           
   336                           ;main.c: 27: unsigned char config = 0b01111111 & 0b11111111 & 0b11111110 & 0b11111101 & 
      +                          0b11111111&0b11111111;
   337  000A6A  0E7C               	movlw	124
   338  000A6C  6E23               	movwf	main@config,c
   339                           
   340                           ;main.c: 28: unsigned int spbrg = 624;
   341  000A6E  0E02               	movlw	2
   342  000A70  6E22               	movwf	main@spbrg+1,c
   343  000A72  0E70               	movlw	112
   344  000A74  6E21               	movwf	main@spbrg,c
   345                           
   346                           ;main.c: 29: OpenUSART(config, spbrg);
   347  000A76  C021  F014         	movff	main@spbrg,OpenUSART@spbrg
   348  000A7A  C022  F015         	movff	main@spbrg+1,OpenUSART@spbrg+1
   349  000A7E  5023               	movf	main@config,w,c
   350  000A80  EC9E  F004         	call	_OpenUSART
   351                           
   352                           ;main.c: 31: unsigned char baudconfig = 0b11111111&0b11111110;
   353  000A84  0EFE               	movlw	254
   354  000A86  6E24               	movwf	main@baudconfig,c
   355                           
   356                           ;main.c: 32: baudUSART(baudconfig);
   357  000A88  5024               	movf	main@baudconfig,w,c
   358  000A8A  ECC5  F005         	call	_baudUSART
   359                           
   360                           ;main.c: 34: INTCONbits.PEIE=1;
   361  000A8E  8CF2               	bsf	intcon,6,c	;volatile
   362                           
   363                           ;main.c: 35: INTCONbits.GIE=1;
   364  000A90  8EF2               	bsf	intcon,7,c	;volatile
   365  000A92                     l39:
   366  000A92  A2AC               	btfss	4012,1,c	;volatile
   367  000A94  D7FE               	goto	l39
   368                           
   369                           ;main.c: 38: putsUSART(MensajeTx);
   370  000A96  0E00               	movlw	high _MensajeTx
   371  000A98  6E16               	movwf	putsUSART@data+1,c
   372  000A9A  0E25               	movlw	low _MensajeTx
   373  000A9C  6E15               	movwf	putsUSART@data,c
   374  000A9E  ECD2  F004         	call	_putsUSART	;wreg free
   375  000AA2                     l884:
   376                           
   377                           ;main.c: 41: PORTCbits.RC0 = ~PORTCbits.RC0;;
   378  000AA2  7082               	btg	3970,0,c	;volatile
   379                           
   380                           ;main.c: 42: x_delay_ms(250);
   381  000AA4  0E00               	movlw	0
   382  000AA6  6E1D               	movwf	x_delay_ms@x+1,c
   383  000AA8  0EFA               	movlw	250
   384  000AAA  6E1C               	movwf	x_delay_ms@x,c
   385  000AAC  EC5A  F005         	call	_x_delay_ms	;wreg free
   386                           
   387                           ;main.c: 43: PORTCbits.RC1 = ~PORTCbits.RC1;;
   388  000AB0  7282               	btg	3970,1,c	;volatile
   389  000AB2  D7F7               	goto	l884
   390  000AB4                     __end_of_main:
   391                           	opt stack 0
   392                           tblptru	equ	0xFF8
   393                           tblptrh	equ	0xFF7
   394                           tblptrl	equ	0xFF6
   395                           tablat	equ	0xFF5
   396                           intcon	equ	0xFF2
   397                           postinc0	equ	0xFEE
   398                           postdec1	equ	0xFE5
   399                           fsr1l	equ	0xFE1
   400                           
   401 ;; *************** function _x_delay_ms *****************
   402 ;; Defined at:
   403 ;;		line 13 in file "main.c"
   404 ;; Parameters:    Size  Location     Type
   405 ;;  x               2   27[COMRAM] int 
   406 ;; Auto vars:     Size  Location     Type
   407 ;;  cont            2   30[COMRAM] int 
   408 ;; Return value:  Size  Location     Type
   409 ;;		None               void
   410 ;; Registers used:
   411 ;;		wreg, status,2, status,0, prodl, cstack
   412 ;; Tracked objects:
   413 ;;		On entry : 0/0
   414 ;;		On exit  : 0/0
   415 ;;		Unchanged: 0/0
   416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   417 ;;      Params:         2       0       0       0       0       0       0       0       0
   418 ;;      Locals:         2       0       0       0       0       0       0       0       0
   419 ;;      Temps:          1       0       0       0       0       0       0       0       0
   420 ;;      Totals:         5       0       0       0       0       0       0       0       0
   421 ;;Total ram usage:        5 bytes
   422 ;; Hardware stack levels used:    1
   423 ;; Hardware stack levels required when called:    4
   424 ;; This function calls:
   425 ;;		___awdiv
   426 ;; This function is called by:
   427 ;;		_main
   428 ;; This function uses a non-reentrant model
   429 ;;
   430                           
   431                           	psect	text1
   432  000AB4                     __ptext1:
   433                           	opt stack 0
   434  000AB4                     _x_delay_ms:
   435                           	opt stack 26
   436                           
   437                           ;main.c: 14: int cont = x/10;
   438                           
   439                           ;incstack = 0
   440  000AB4  C01C  F014         	movff	x_delay_ms@x,___awdiv@dividend
   441  000AB8  C01D  F015         	movff	x_delay_ms@x+1,___awdiv@dividend+1
   442  000ABC  0E00               	movlw	0
   443  000ABE  6E17               	movwf	___awdiv@divisor+1,c
   444  000AC0  0E0A               	movlw	10
   445  000AC2  6E16               	movwf	___awdiv@divisor,c
   446  000AC4  EC07  F004         	call	___awdiv	;wreg free
   447  000AC8  C014  F01F         	movff	?___awdiv,x_delay_ms@cont
   448  000ACC  C015  F020         	movff	?___awdiv+1,x_delay_ms@cont+1
   449                           
   450                           ;main.c: 15: while (cont > 0){
   451  000AD0  D00B               	goto	l788
   452  000AD2                     l784:
   453                           
   454                           ;main.c: 16: _delay((unsigned long)((10)*(48000000/4000.0)));
   455  000AD2  0E9C               	movlw	156
   456  000AD4  6E1E               	movwf	??_x_delay_ms& (0+255),c
   457  000AD6  0ED7               	movlw	215
   458  000AD8                     u457:
   459  000AD8  2EE8               	decfsz	wreg,f,c
   460  000ADA  D7FE               	goto	u457
   461  000ADC  2E1E               	decfsz	??_x_delay_ms& (0+255),f,c
   462  000ADE  D7FC               	goto	u457
   463  000AE0  F000               	nop	
   464                           
   465                           ;main.c: 17: cont --;
   466  000AE2  061F               	decf	x_delay_ms@cont,f,c
   467  000AE4  A0D8               	btfss	status,0,c
   468  000AE6  0620               	decf	x_delay_ms@cont+1,f,c
   469  000AE8                     l788:
   470  000AE8  5020               	movf	x_delay_ms@cont+1,w,c
   471  000AEA  0A80               	xorlw	128
   472  000AEC  6EF3               	movwf	prodl,c
   473  000AEE  0E80               	movlw	128
   474  000AF0  5CF3               	subwf	prodl,w,c
   475  000AF2  0E01               	movlw	1
   476  000AF4  B4D8               	btfsc	status,2,c
   477  000AF6  5C1F               	subwf	x_delay_ms@cont,w,c
   478  000AF8  A0D8               	btfss	status,0,c
   479  000AFA  0012               	return	
   480  000AFC  D7EA               	goto	l784
   481  000AFE                     __end_of_x_delay_ms:
   482                           	opt stack 0
   483                           tblptru	equ	0xFF8
   484                           tblptrh	equ	0xFF7
   485                           tblptrl	equ	0xFF6
   486                           tablat	equ	0xFF5
   487                           prodl	equ	0xFF3
   488                           intcon	equ	0xFF2
   489                           postinc0	equ	0xFEE
   490                           wreg	equ	0xFE8
   491                           postdec1	equ	0xFE5
   492                           fsr1l	equ	0xFE1
   493                           status	equ	0xFD8
   494                           
   495 ;; *************** function ___awdiv *****************
   496 ;; Defined at:
   497 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awdiv.c"
   498 ;; Parameters:    Size  Location     Type
   499 ;;  dividend        2   19[COMRAM] int 
   500 ;;  divisor         2   21[COMRAM] int 
   501 ;; Auto vars:     Size  Location     Type
   502 ;;  quotient        2   25[COMRAM] int 
   503 ;;  sign            1   24[COMRAM] unsigned char 
   504 ;;  counter         1   23[COMRAM] unsigned char 
   505 ;; Return value:  Size  Location     Type
   506 ;;                  2   19[COMRAM] int 
   507 ;; Registers used:
   508 ;;		wreg, status,2, status,0, prodl
   509 ;; Tracked objects:
   510 ;;		On entry : 0/0
   511 ;;		On exit  : 0/0
   512 ;;		Unchanged: 0/0
   513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   514 ;;      Params:         4       0       0       0       0       0       0       0       0
   515 ;;      Locals:         4       0       0       0       0       0       0       0       0
   516 ;;      Temps:          0       0       0       0       0       0       0       0       0
   517 ;;      Totals:         8       0       0       0       0       0       0       0       0
   518 ;;Total ram usage:        8 bytes
   519 ;; Hardware stack levels used:    1
   520 ;; Hardware stack levels required when called:    3
   521 ;; This function calls:
   522 ;;		Nothing
   523 ;; This function is called by:
   524 ;;		_x_delay_ms
   525 ;; This function uses a non-reentrant model
   526 ;;
   527                           
   528                           	psect	text2
   529  00080E                     __ptext2:
   530                           	opt stack 0
   531  00080E                     ___awdiv:
   532                           	opt stack 26
   533                           
   534                           ;incstack = 0
   535  00080E  0E00               	movlw	0
   536  000810  6E19               	movwf	___awdiv@sign,c
   537  000812  5017               	movf	___awdiv@divisor+1,w,c
   538  000814  0A80               	xorlw	128
   539  000816  6EF3               	movwf	prodl,c
   540  000818  0E80               	movlw	128
   541  00081A  5CF3               	subwf	prodl,w,c
   542  00081C  0E00               	movlw	0
   543  00081E  B4D8               	btfsc	status,2,c
   544  000820  5C16               	subwf	___awdiv@divisor,w,c
   545  000822  B0D8               	btfsc	status,0,c
   546  000824  D006               	goto	l738
   547  000826  6C16               	negf	___awdiv@divisor,c
   548  000828  1E17               	comf	___awdiv@divisor+1,f,c
   549  00082A  B0D8               	btfsc	status,0,c
   550  00082C  2A17               	incf	___awdiv@divisor+1,f,c
   551  00082E  0E01               	movlw	1
   552  000830  6E19               	movwf	___awdiv@sign,c
   553  000832                     l738:
   554  000832  5015               	movf	___awdiv@dividend+1,w,c
   555  000834  0A80               	xorlw	128
   556  000836  6EF3               	movwf	prodl,c
   557  000838  0E80               	movlw	128
   558  00083A  5CF3               	subwf	prodl,w,c
   559  00083C  0E00               	movlw	0
   560  00083E  B4D8               	btfsc	status,2,c
   561  000840  5C14               	subwf	___awdiv@dividend,w,c
   562  000842  B0D8               	btfsc	status,0,c
   563  000844  D006               	goto	l744
   564  000846  6C14               	negf	___awdiv@dividend,c
   565  000848  1E15               	comf	___awdiv@dividend+1,f,c
   566  00084A  B0D8               	btfsc	status,0,c
   567  00084C  2A15               	incf	___awdiv@dividend+1,f,c
   568  00084E  0E01               	movlw	1
   569  000850  1A19               	xorwf	___awdiv@sign,f,c
   570  000852                     l744:
   571  000852  0E00               	movlw	0
   572  000854  6E1B               	movwf	___awdiv@quotient+1,c
   573  000856  0E00               	movlw	0
   574  000858  6E1A               	movwf	___awdiv@quotient,c
   575  00085A  5017               	movf	___awdiv@divisor+1,w,c
   576  00085C  1016               	iorwf	___awdiv@divisor,w,c
   577  00085E  B4D8               	btfsc	status,2,c
   578  000860  D01C               	goto	l766
   579  000862  0E01               	movlw	1
   580  000864  6E18               	movwf	___awdiv@counter,c
   581  000866  D004               	goto	l752
   582  000868                     l750:
   583  000868  90D8               	bcf	status,0,c
   584  00086A  3616               	rlcf	___awdiv@divisor,f,c
   585  00086C  3617               	rlcf	___awdiv@divisor+1,f,c
   586  00086E  2A18               	incf	___awdiv@counter,f,c
   587  000870                     l752:
   588  000870  AE17               	btfss	___awdiv@divisor+1,7,c
   589  000872  D7FA               	goto	l750
   590  000874                     l754:
   591  000874  90D8               	bcf	status,0,c
   592  000876  361A               	rlcf	___awdiv@quotient,f,c
   593  000878  361B               	rlcf	___awdiv@quotient+1,f,c
   594  00087A  5016               	movf	___awdiv@divisor,w,c
   595  00087C  5C14               	subwf	___awdiv@dividend,w,c
   596  00087E  5017               	movf	___awdiv@divisor+1,w,c
   597  000880  5815               	subwfb	___awdiv@dividend+1,w,c
   598  000882  A0D8               	btfss	status,0,c
   599  000884  D005               	goto	l762
   600  000886  5016               	movf	___awdiv@divisor,w,c
   601  000888  5E14               	subwf	___awdiv@dividend,f,c
   602  00088A  5017               	movf	___awdiv@divisor+1,w,c
   603  00088C  5A15               	subwfb	___awdiv@dividend+1,f,c
   604  00088E  801A               	bsf	___awdiv@quotient,0,c
   605  000890                     l762:
   606  000890  90D8               	bcf	status,0,c
   607  000892  3217               	rrcf	___awdiv@divisor+1,f,c
   608  000894  3216               	rrcf	___awdiv@divisor,f,c
   609  000896  2E18               	decfsz	___awdiv@counter,f,c
   610  000898  D7ED               	goto	l754
   611  00089A                     l766:
   612  00089A  5019               	movf	___awdiv@sign,w,c
   613  00089C  B4D8               	btfsc	status,2,c
   614  00089E  D004               	goto	l770
   615  0008A0  6C1A               	negf	___awdiv@quotient,c
   616  0008A2  1E1B               	comf	___awdiv@quotient+1,f,c
   617  0008A4  B0D8               	btfsc	status,0,c
   618  0008A6  2A1B               	incf	___awdiv@quotient+1,f,c
   619  0008A8                     l770:
   620  0008A8  C01A  F014         	movff	___awdiv@quotient,?___awdiv
   621  0008AC  C01B  F015         	movff	___awdiv@quotient+1,?___awdiv+1
   622  0008B0  0012               	return	
   623  0008B2                     __end_of___awdiv:
   624                           	opt stack 0
   625                           tblptru	equ	0xFF8
   626                           tblptrh	equ	0xFF7
   627                           tblptrl	equ	0xFF6
   628                           tablat	equ	0xFF5
   629                           prodl	equ	0xFF3
   630                           intcon	equ	0xFF2
   631                           postinc0	equ	0xFEE
   632                           wreg	equ	0xFE8
   633                           postdec1	equ	0xFE5
   634                           fsr1l	equ	0xFE1
   635                           status	equ	0xFD8
   636                           
   637 ;; *************** function _putsUSART *****************
   638 ;; Defined at:
   639 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\USART\uputs.c"
   640 ;; Parameters:    Size  Location     Type
   641 ;;  data            2   20[COMRAM] PTR unsigned char 
   642 ;;		 -> STR_1(12), MensajeTx(27), 
   643 ;; Auto vars:     Size  Location     Type
   644 ;;		None
   645 ;; Return value:  Size  Location     Type
   646 ;;		None               void
   647 ;; Registers used:
   648 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   649 ;; Tracked objects:
   650 ;;		On entry : 0/0
   651 ;;		On exit  : 0/0
   652 ;;		Unchanged: 0/0
   653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   654 ;;      Params:         2       0       0       0       0       0       0       0       0
   655 ;;      Locals:         0       0       0       0       0       0       0       0       0
   656 ;;      Temps:          2       0       0       0       0       0       0       0       0
   657 ;;      Totals:         4       0       0       0       0       0       0       0       0
   658 ;;Total ram usage:        4 bytes
   659 ;; Hardware stack levels used:    1
   660 ;; Hardware stack levels required when called:    4
   661 ;; This function calls:
   662 ;;		_WriteUSART
   663 ;; This function is called by:
   664 ;;		_main
   665 ;; This function uses a non-reentrant model
   666 ;;
   667                           
   668                           	psect	text3
   669  0009A4                     __ptext3:
   670                           	opt stack 0
   671  0009A4                     _putsUSART:
   672                           	opt stack 26
   673  0009A4                     l100:
   674  0009A4  A2AC               	btfss	4012,1,c	;volatile
   675  0009A6  D7FE               	goto	l100
   676  0009A8  C015  FFF6         	movff	putsUSART@data,tblptrl
   677  0009AC  C016  FFF7         	movff	putsUSART@data+1,tblptrh
   678  0009B0  6AF8               	clrf	tblptru,c
   679  0009B2  0E07               	movlw	(high __ramtop+-1)
   680  0009B4  64F7               	cpfsgt	tblptrh,c
   681  0009B6  D003               	bra	u237
   682  0009B8  0008               	tblrd		*
   683  0009BA  50F5               	movf	tablat,w,c
   684  0009BC  D005               	bra	u230
   685  0009BE                     u237:
   686  0009BE  CFF6 FFE9          	movff	tblptrl,fsr0l
   687  0009C2  CFF7 FFEA          	movff	tblptrh,fsr0h
   688  0009C6  50EF               	movf	indf0,w,c
   689  0009C8                     u230:
   690  0009C8  ECB3  F005         	call	_WriteUSART
   691  0009CC  5015               	movf	putsUSART@data,w,c
   692  0009CE  6E17               	movwf	??_putsUSART& (0+255),c
   693  0009D0  5016               	movf	putsUSART@data+1,w,c
   694  0009D2  6E18               	movwf	(??_putsUSART+1)& (0+255),c
   695  0009D4  4A15               	infsnz	putsUSART@data,f,c
   696  0009D6  2A16               	incf	putsUSART@data+1,f,c
   697  0009D8  C017  FFF6         	movff	??_putsUSART,tblptrl
   698  0009DC  C018  FFF7         	movff	??_putsUSART+1,tblptrh
   699  0009E0  6AF8               	clrf	tblptru,c
   700  0009E2  0E07               	movlw	(high __ramtop+-1)
   701  0009E4  64F7               	cpfsgt	tblptrh,c
   702  0009E6  D003               	bra	u247
   703  0009E8  0008               	tblrd		*
   704  0009EA  50F5               	movf	tablat,w,c
   705  0009EC  D005               	bra	u240
   706  0009EE                     u247:
   707  0009EE  CFF6 FFE9          	movff	tblptrl,fsr0l
   708  0009F2  CFF7 FFEA          	movff	tblptrh,fsr0h
   709  0009F6  50EF               	movf	indf0,w,c
   710  0009F8                     u240:
   711  0009F8  0900               	iorlw	0
   712  0009FA  B4D8               	btfsc	status,2,c
   713  0009FC  0012               	return	
   714  0009FE  D7D2               	goto	l100
   715  000A00                     __end_of_putsUSART:
   716                           	opt stack 0
   717                           tblptru	equ	0xFF8
   718                           tblptrh	equ	0xFF7
   719                           tblptrl	equ	0xFF6
   720                           tablat	equ	0xFF5
   721                           prodl	equ	0xFF3
   722                           intcon	equ	0xFF2
   723                           indf0	equ	0xFEF
   724                           postinc0	equ	0xFEE
   725                           fsr0h	equ	0xFEA
   726                           fsr0l	equ	0xFE9
   727                           wreg	equ	0xFE8
   728                           postdec1	equ	0xFE5
   729                           fsr1l	equ	0xFE1
   730                           status	equ	0xFD8
   731                           
   732 ;; *************** function _WriteUSART *****************
   733 ;; Defined at:
   734 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\USART\uwrite.c"
   735 ;; Parameters:    Size  Location     Type
   736 ;;  data            1    wreg     unsigned char 
   737 ;; Auto vars:     Size  Location     Type
   738 ;;  data            1   19[COMRAM] unsigned char 
   739 ;; Return value:  Size  Location     Type
   740 ;;		None               void
   741 ;; Registers used:
   742 ;;		wreg
   743 ;; Tracked objects:
   744 ;;		On entry : 0/0
   745 ;;		On exit  : 0/0
   746 ;;		Unchanged: 0/0
   747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   748 ;;      Params:         0       0       0       0       0       0       0       0       0
   749 ;;      Locals:         1       0       0       0       0       0       0       0       0
   750 ;;      Temps:          0       0       0       0       0       0       0       0       0
   751 ;;      Totals:         1       0       0       0       0       0       0       0       0
   752 ;;Total ram usage:        1 bytes
   753 ;; Hardware stack levels used:    1
   754 ;; Hardware stack levels required when called:    3
   755 ;; This function calls:
   756 ;;		Nothing
   757 ;; This function is called by:
   758 ;;		_putsUSART
   759 ;; This function uses a non-reentrant model
   760 ;;
   761                           
   762                           	psect	text4
   763  000B66                     __ptext4:
   764                           	opt stack 0
   765  000B66                     _WriteUSART:
   766                           	opt stack 26
   767                           
   768                           ;incstack = 0
   769                           ;WriteUSART@data stored from wreg
   770  000B66  6E14               	movwf	WriteUSART@data,c
   771  000B68  ACAC               	btfss	4012,6,c	;volatile
   772  000B6A  D003               	goto	l728
   773  000B6C  90AC               	bcf	4012,0,c	;volatile
   774  000B6E  B241               	btfsc	_USART_Status,1,c
   775  000B70  80AC               	bsf	4012,0,c	;volatile
   776  000B72                     l728:
   777  000B72  C014  FFAD         	movff	WriteUSART@data,4013	;volatile
   778  000B76  0012               	return	
   779  000B78                     __end_of_WriteUSART:
   780                           	opt stack 0
   781                           tblptru	equ	0xFF8
   782                           tblptrh	equ	0xFF7
   783                           tblptrl	equ	0xFF6
   784                           tablat	equ	0xFF5
   785                           prodl	equ	0xFF3
   786                           intcon	equ	0xFF2
   787                           indf0	equ	0xFEF
   788                           postinc0	equ	0xFEE
   789                           fsr0h	equ	0xFEA
   790                           fsr0l	equ	0xFE9
   791                           wreg	equ	0xFE8
   792                           postdec1	equ	0xFE5
   793                           fsr1l	equ	0xFE1
   794                           status	equ	0xFD8
   795                           
   796 ;; *************** function _baudUSART *****************
   797 ;; Defined at:
   798 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\USART\ubaud.c"
   799 ;; Parameters:    Size  Location     Type
   800 ;;  baudconfig      1    wreg     unsigned char 
   801 ;; Auto vars:     Size  Location     Type
   802 ;;  baudconfig      1   19[COMRAM] unsigned char 
   803 ;; Return value:  Size  Location     Type
   804 ;;		None               void
   805 ;; Registers used:
   806 ;;		wreg
   807 ;; Tracked objects:
   808 ;;		On entry : 0/0
   809 ;;		On exit  : 0/0
   810 ;;		Unchanged: 0/0
   811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   812 ;;      Params:         0       0       0       0       0       0       0       0       0
   813 ;;      Locals:         1       0       0       0       0       0       0       0       0
   814 ;;      Temps:          0       0       0       0       0       0       0       0       0
   815 ;;      Totals:         1       0       0       0       0       0       0       0       0
   816 ;;Total ram usage:        1 bytes
   817 ;; Hardware stack levels used:    1
   818 ;; Hardware stack levels required when called:    3
   819 ;; This function calls:
   820 ;;		Nothing
   821 ;; This function is called by:
   822 ;;		_main
   823 ;; This function uses a non-reentrant model
   824 ;;
   825                           
   826                           	psect	text5
   827  000B8A                     __ptext5:
   828                           	opt stack 0
   829  000B8A                     _baudUSART:
   830                           	opt stack 27
   831                           
   832                           ;incstack = 0
   833                           ;baudUSART@baudconfig stored from wreg
   834  000B8A  6E14               	movwf	baudUSART@baudconfig,c
   835  000B8C  C014  FFB8         	movff	baudUSART@baudconfig,4024	;volatile
   836  000B90  0012               	return	
   837  000B92                     __end_of_baudUSART:
   838                           	opt stack 0
   839                           tblptru	equ	0xFF8
   840                           tblptrh	equ	0xFF7
   841                           tblptrl	equ	0xFF6
   842                           tablat	equ	0xFF5
   843                           prodl	equ	0xFF3
   844                           intcon	equ	0xFF2
   845                           indf0	equ	0xFEF
   846                           postinc0	equ	0xFEE
   847                           fsr0h	equ	0xFEA
   848                           fsr0l	equ	0xFE9
   849                           wreg	equ	0xFE8
   850                           postdec1	equ	0xFE5
   851                           fsr1l	equ	0xFE1
   852                           status	equ	0xFD8
   853                           
   854 ;; *************** function _OpenUSART *****************
   855 ;; Defined at:
   856 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\USART\uopen.c"
   857 ;; Parameters:    Size  Location     Type
   858 ;;  config          1    wreg     unsigned char 
   859 ;;  spbrg           2   19[COMRAM] unsigned int 
   860 ;; Auto vars:     Size  Location     Type
   861 ;;  config          1   24[COMRAM] unsigned char 
   862 ;; Return value:  Size  Location     Type
   863 ;;		None               void
   864 ;; Registers used:
   865 ;;		wreg, status,2
   866 ;; Tracked objects:
   867 ;;		On entry : 0/0
   868 ;;		On exit  : 0/0
   869 ;;		Unchanged: 0/0
   870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   871 ;;      Params:         2       0       0       0       0       0       0       0       0
   872 ;;      Locals:         1       0       0       0       0       0       0       0       0
   873 ;;      Temps:          3       0       0       0       0       0       0       0       0
   874 ;;      Totals:         6       0       0       0       0       0       0       0       0
   875 ;;Total ram usage:        6 bytes
   876 ;; Hardware stack levels used:    1
   877 ;; Hardware stack levels required when called:    3
   878 ;; This function calls:
   879 ;;		Nothing
   880 ;; This function is called by:
   881 ;;		_main
   882 ;; This function uses a non-reentrant model
   883 ;;
   884                           
   885                           	psect	text6
   886  00093C                     __ptext6:
   887                           	opt stack 0
   888  00093C                     _OpenUSART:
   889                           	opt stack 27
   890                           
   891                           ;incstack = 0
   892                           ;OpenUSART@config stored from wreg
   893  00093C  6E19               	movwf	OpenUSART@config,c
   894  00093E  0E00               	movlw	0
   895  000940  6EAC               	movwf	4012,c	;volatile
   896  000942  0E00               	movlw	0
   897  000944  6EAB               	movwf	4011,c	;volatile
   898  000946  B019               	btfsc	OpenUSART@config,0,c
   899  000948  88AC               	bsf	4012,4,c	;volatile
   900  00094A  A219               	btfss	OpenUSART@config,1,c
   901  00094C  D002               	goto	l800
   902  00094E  8CAC               	bsf	4012,6,c	;volatile
   903  000950  8CAB               	bsf	4011,6,c	;volatile
   904  000952                     l800:
   905  000952  B419               	btfsc	OpenUSART@config,2,c
   906  000954  8EAC               	bsf	4012,7,c	;volatile
   907  000956  A619               	btfss	OpenUSART@config,3,c
   908  000958  D002               	goto	l83
   909  00095A  88AB               	bsf	4011,4,c	;volatile
   910  00095C  D001               	goto	l808
   911  00095E                     l83:
   912  00095E  8AAB               	bsf	4011,5,c	;volatile
   913  000960                     l808:
   914  000960  B819               	btfsc	OpenUSART@config,4,c
   915  000962  84AC               	bsf	4012,2,c	;volatile
   916  000964  989E               	bcf	3998,4,c	;volatile
   917  000966  BA19               	btfsc	OpenUSART@config,5,c
   918  000968  86AB               	bsf	4011,3,c	;volatile
   919  00096A  AC19               	btfss	OpenUSART@config,6,c
   920  00096C  D002               	goto	l87
   921  00096E  8A9D               	bsf	3997,5,c	;volatile
   922  000970  D001               	goto	l88
   923  000972                     l87:
   924  000972  9A9D               	bcf	3997,5,c	;volatile
   925  000974                     l88:
   926  000974  9A9E               	bcf	3998,5,c	;volatile
   927  000976  AE19               	btfss	OpenUSART@config,7,c
   928  000978  D002               	goto	l89
   929  00097A  889D               	bsf	3997,4,c	;volatile
   930  00097C  D001               	goto	l90
   931  00097E                     l89:
   932  00097E  989D               	bcf	3997,4,c	;volatile
   933  000980                     l90:
   934  000980  C014  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
   935  000984  C015  F016         	movff	OpenUSART@spbrg+1,??_OpenUSART
   936  000988  C016  F017         	movff	??_OpenUSART,??_OpenUSART+1
   937  00098C  6A18               	clrf	(??_OpenUSART+2)& (0+255),c
   938  00098E  5017               	movf	??_OpenUSART+1,w,c
   939  000990  6EB0               	movwf	4016,c	;volatile
   940  000992  8AAC               	bsf	4012,5,c	;volatile
   941  000994  8EAB               	bsf	4011,7,c	;volatile
   942  000996  9C94               	bcf	3988,6,c	;volatile
   943  000998  8E94               	bsf	3988,7,c	;volatile
   944  00099A  B8AC               	btfsc	4012,4,c	;volatile
   945  00099C  BEAC               	btfsc	4012,7,c	;volatile
   946  00099E  D001               	goto	l92
   947  0009A0  8C94               	bsf	3988,6,c	;volatile
   948  0009A2                     l92:
   949  0009A2  0012               	return	
   950  0009A4                     __end_of_OpenUSART:
   951                           	opt stack 0
   952                           tblptru	equ	0xFF8
   953                           tblptrh	equ	0xFF7
   954                           tblptrl	equ	0xFF6
   955                           tablat	equ	0xFF5
   956                           prodl	equ	0xFF3
   957                           intcon	equ	0xFF2
   958                           indf0	equ	0xFEF
   959                           postinc0	equ	0xFEE
   960                           fsr0h	equ	0xFEA
   961                           fsr0l	equ	0xFE9
   962                           wreg	equ	0xFE8
   963                           postdec1	equ	0xFE5
   964                           fsr1l	equ	0xFE1
   965                           status	equ	0xFD8
   966                           
   967 ;; *************** function _Interrupcion *****************
   968 ;; Defined at:
   969 ;;		line 48 in file "main.c"
   970 ;; Parameters:    Size  Location     Type
   971 ;;		None
   972 ;; Auto vars:     Size  Location     Type
   973 ;;		None
   974 ;; Return value:  Size  Location     Type
   975 ;;		None               void
   976 ;; Registers used:
   977 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   978 ;; Tracked objects:
   979 ;;		On entry : 0/0
   980 ;;		On exit  : 0/0
   981 ;;		Unchanged: 0/0
   982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   983 ;;      Params:         0       0       0       0       0       0       0       0       0
   984 ;;      Locals:         0       0       0       0       0       0       0       0       0
   985 ;;      Temps:         14       0       0       0       0       0       0       0       0
   986 ;;      Totals:        14       0       0       0       0       0       0       0       0
   987 ;;Total ram usage:       14 bytes
   988 ;; Hardware stack levels used:    1
   989 ;; Hardware stack levels required when called:    2
   990 ;; This function calls:
   991 ;;		_ReadUSART
   992 ;;		i2_WriteUSART
   993 ;;		i2_putsUSART
   994 ;; This function is called by:
   995 ;;		Interrupt level 2
   996 ;; This function uses a non-reentrant model
   997 ;;
   998                           
   999                           	psect	intcode
  1000  000008                     __pintcode:
  1001                           	opt stack 0
  1002  000008                     _Interrupcion:
  1003                           	opt stack 26
  1004                           
  1005                           ;incstack = 0
  1006  000008  CFFA F006          	movff	pclath,??_Interrupcion
  1007  00000C  CFFB F007          	movff	pclatu,??_Interrupcion+1
  1008  000010  CFE9 F008          	movff	fsr0l,??_Interrupcion+2
  1009  000014  ED59  F004         	call	int_func,f	;refresh shadow registers
  1010                           pclatu	equ	0xFFB
  1011                           pclath	equ	0xFFA
  1012                           tblptru	equ	0xFF8
  1013                           tblptrh	equ	0xFF7
  1014                           tblptrl	equ	0xFF6
  1015                           tablat	equ	0xFF5
  1016                           prodl	equ	0xFF3
  1017                           intcon	equ	0xFF2
  1018                           indf0	equ	0xFEF
  1019                           postinc0	equ	0xFEE
  1020                           fsr0h	equ	0xFEA
  1021                           fsr0l	equ	0xFE9
  1022                           wreg	equ	0xFE8
  1023                           postdec1	equ	0xFE5
  1024                           fsr1l	equ	0xFE1
  1025                           status	equ	0xFD8
  1026                           
  1027                           	psect	intcode_body
  1028  0008B2                     __pintcode_body:
  1029                           	opt stack 26
  1030  0008B2                     int_func:
  1031                           	opt stack 26
  1032  0008B2  0006               	pop		; remove dummy address from shadow register refresh
  1033  0008B4  CFEA F009          	movff	fsr0h,??_Interrupcion+3
  1034  0008B8  CFE1 F00A          	movff	fsr1l,??_Interrupcion+4
  1035  0008BC  CFE2 F00B          	movff	fsr1h,??_Interrupcion+5
  1036  0008C0  CFD9 F00C          	movff	fsr2l,??_Interrupcion+6
  1037  0008C4  CFDA F00D          	movff	fsr2h,??_Interrupcion+7
  1038  0008C8  CFF3 F00E          	movff	prodl,??_Interrupcion+8
  1039  0008CC  CFF4 F00F          	movff	prodh,??_Interrupcion+9
  1040  0008D0  CFF6 F010          	movff	tblptrl,??_Interrupcion+10
  1041  0008D4  CFF7 F011          	movff	tblptrh,??_Interrupcion+11
  1042  0008D8  CFF8 F012          	movff	tblptru,??_Interrupcion+12
  1043  0008DC  CFF5 F013          	movff	tablat,??_Interrupcion+13
  1044                           
  1045                           ;main.c: 49: CaracterRx=ReadUSART();
  1046  0008E0  EC96  F005         	call	_ReadUSART	;wreg free
  1047  0008E4  6E40               	movwf	_CaracterRx,c
  1048  0008E6                     i2l48:
  1049  0008E6  A2AC               	btfss	4012,1,c	;volatile
  1050  0008E8  D7FE               	goto	i2l48
  1051                           
  1052                           ;main.c: 51: putsUSART("\n\rEnviado: ");
  1053  0008EA  0E08               	movlw	high STR_1
  1054  0008EC  6E03               	movwf	i2putsUSART@data+1,c
  1055  0008EE  0E01               	movlw	low STR_1
  1056  0008F0  6E02               	movwf	i2putsUSART@data,c
  1057  0008F2  EC00  F005         	call	i2_putsUSART	;wreg free
  1058  0008F6                     i2l51:
  1059  0008F6  A2AC               	btfss	4012,1,c	;volatile
  1060  0008F8  D7FE               	goto	i2l51
  1061                           
  1062                           ;main.c: 53: WriteUSART(CaracterRx);
  1063  0008FA  5040               	movf	_CaracterRx,w,c
  1064  0008FC  ECBC  F005         	call	i2_WriteUSART
  1065                           
  1066                           ;main.c: 54: PIR1bits.RCIF=0;
  1067  000900  9A9E               	bcf	3998,5,c	;volatile
  1068  000902  C013  FFF5         	movff	??_Interrupcion+13,tablat
  1069  000906  C012  FFF8         	movff	??_Interrupcion+12,tblptru
  1070  00090A  C011  FFF7         	movff	??_Interrupcion+11,tblptrh
  1071  00090E  C010  FFF6         	movff	??_Interrupcion+10,tblptrl
  1072  000912  C00F  FFF4         	movff	??_Interrupcion+9,prodh
  1073  000916  C00E  FFF3         	movff	??_Interrupcion+8,prodl
  1074  00091A  C00D  FFDA         	movff	??_Interrupcion+7,fsr2h
  1075  00091E  C00C  FFD9         	movff	??_Interrupcion+6,fsr2l
  1076  000922  C00B  FFE2         	movff	??_Interrupcion+5,fsr1h
  1077  000926  C00A  FFE1         	movff	??_Interrupcion+4,fsr1l
  1078  00092A  C009  FFEA         	movff	??_Interrupcion+3,fsr0h
  1079  00092E  C008  FFE9         	movff	??_Interrupcion+2,fsr0l
  1080  000932  C007  FFFB         	movff	??_Interrupcion+1,pclatu
  1081  000936  C006  FFFA         	movff	??_Interrupcion,pclath
  1082  00093A  0011               	retfie		f
  1083  00093C                     __end_of_Interrupcion:
  1084                           	opt stack 0
  1085                           pclatu	equ	0xFFB
  1086                           pclath	equ	0xFFA
  1087                           tblptru	equ	0xFF8
  1088                           tblptrh	equ	0xFF7
  1089                           tblptrl	equ	0xFF6
  1090                           tablat	equ	0xFF5
  1091                           prodh	equ	0xFF4
  1092                           prodl	equ	0xFF3
  1093                           intcon	equ	0xFF2
  1094                           indf0	equ	0xFEF
  1095                           postinc0	equ	0xFEE
  1096                           fsr0h	equ	0xFEA
  1097                           fsr0l	equ	0xFE9
  1098                           wreg	equ	0xFE8
  1099                           postdec1	equ	0xFE5
  1100                           fsr1h	equ	0xFE2
  1101                           fsr1l	equ	0xFE1
  1102                           fsr2h	equ	0xFDA
  1103                           fsr2l	equ	0xFD9
  1104                           status	equ	0xFD8
  1105                           
  1106 ;; *************** function i2_putsUSART *****************
  1107 ;; Defined at:
  1108 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\USART\uputs.c"
  1109 ;; Parameters:    Size  Location     Type
  1110 ;;  data            2    1[COMRAM] PTR unsigned char 
  1111 ;;		 -> STR_1(12), MensajeTx(27), 
  1112 ;; Auto vars:     Size  Location     Type
  1113 ;;		None
  1114 ;; Return value:  Size  Location     Type
  1115 ;;		None               void
  1116 ;; Registers used:
  1117 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1118 ;; Tracked objects:
  1119 ;;		On entry : 0/0
  1120 ;;		On exit  : 0/0
  1121 ;;		Unchanged: 0/0
  1122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1123 ;;      Params:         2       0       0       0       0       0       0       0       0
  1124 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1125 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1126 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1127 ;;Total ram usage:        4 bytes
  1128 ;; Hardware stack levels used:    1
  1129 ;; Hardware stack levels required when called:    1
  1130 ;; This function calls:
  1131 ;;		i2_WriteUSART
  1132 ;; This function is called by:
  1133 ;;		_Interrupcion
  1134 ;; This function uses a non-reentrant model
  1135 ;;
  1136                           
  1137                           	psect	text8
  1138  000A00                     __ptext8:
  1139                           	opt stack 0
  1140  000A00                     i2_putsUSART:
  1141                           	opt stack 26
  1142  000A00                     i2l100:
  1143  000A00  A2AC               	btfss	4012,1,c	;volatile
  1144  000A02  D7FE               	goto	i2l100
  1145  000A04  C002  FFF6         	movff	i2putsUSART@data,tblptrl
  1146  000A08  C003  FFF7         	movff	i2putsUSART@data+1,tblptrh
  1147  000A0C  6AF8               	clrf	tblptru,c
  1148  000A0E  0E07               	movlw	(high __ramtop+-1)
  1149  000A10  64F7               	cpfsgt	tblptrh,c
  1150  000A12  D003               	bra	i2u40_47
  1151  000A14  0008               	tblrd		*
  1152  000A16  50F5               	movf	tablat,w,c
  1153  000A18  D005               	bra	i2u40_40
  1154  000A1A                     i2u40_47:
  1155  000A1A  CFF6 FFE9          	movff	tblptrl,fsr0l
  1156  000A1E  CFF7 FFEA          	movff	tblptrh,fsr0h
  1157  000A22  50EF               	movf	indf0,w,c
  1158  000A24                     i2u40_40:
  1159  000A24  ECBC  F005         	call	i2_WriteUSART
  1160  000A28  5002               	movf	i2putsUSART@data,w,c
  1161  000A2A  6E04               	movwf	??i2_putsUSART& (0+255),c
  1162  000A2C  5003               	movf	i2putsUSART@data+1,w,c
  1163  000A2E  6E05               	movwf	(??i2_putsUSART+1)& (0+255),c
  1164  000A30  4A02               	infsnz	i2putsUSART@data,f,c
  1165  000A32  2A03               	incf	i2putsUSART@data+1,f,c
  1166  000A34  C004  FFF6         	movff	??i2_putsUSART,tblptrl
  1167  000A38  C005  FFF7         	movff	??i2_putsUSART+1,tblptrh
  1168  000A3C  6AF8               	clrf	tblptru,c
  1169  000A3E  0E07               	movlw	(high __ramtop+-1)
  1170  000A40  64F7               	cpfsgt	tblptrh,c
  1171  000A42  D003               	bra	i2u41_47
  1172  000A44  0008               	tblrd		*
  1173  000A46  50F5               	movf	tablat,w,c
  1174  000A48  D005               	bra	i2u41_40
  1175  000A4A                     i2u41_47:
  1176  000A4A  CFF6 FFE9          	movff	tblptrl,fsr0l
  1177  000A4E  CFF7 FFEA          	movff	tblptrh,fsr0h
  1178  000A52  50EF               	movf	indf0,w,c
  1179  000A54                     i2u41_40:
  1180  000A54  0900               	iorlw	0
  1181  000A56  B4D8               	btfsc	status,2,c
  1182  000A58  0012               	return	
  1183  000A5A  D7D2               	goto	i2l100
  1184  000A5C                     __end_ofi2_putsUSART:
  1185                           	opt stack 0
  1186                           pclatu	equ	0xFFB
  1187                           pclath	equ	0xFFA
  1188                           tblptru	equ	0xFF8
  1189                           tblptrh	equ	0xFF7
  1190                           tblptrl	equ	0xFF6
  1191                           tablat	equ	0xFF5
  1192                           prodh	equ	0xFF4
  1193                           prodl	equ	0xFF3
  1194                           intcon	equ	0xFF2
  1195                           indf0	equ	0xFEF
  1196                           postinc0	equ	0xFEE
  1197                           fsr0h	equ	0xFEA
  1198                           fsr0l	equ	0xFE9
  1199                           wreg	equ	0xFE8
  1200                           postdec1	equ	0xFE5
  1201                           fsr1h	equ	0xFE2
  1202                           fsr1l	equ	0xFE1
  1203                           fsr2h	equ	0xFDA
  1204                           fsr2l	equ	0xFD9
  1205                           status	equ	0xFD8
  1206                           
  1207 ;; *************** function i2_WriteUSART *****************
  1208 ;; Defined at:
  1209 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\USART\uwrite.c"
  1210 ;; Parameters:    Size  Location     Type
  1211 ;;  data            1    wreg     unsigned char 
  1212 ;; Auto vars:     Size  Location     Type
  1213 ;;  data            1    0[COMRAM] unsigned char 
  1214 ;; Return value:  Size  Location     Type
  1215 ;;		None               void
  1216 ;; Registers used:
  1217 ;;		wreg
  1218 ;; Tracked objects:
  1219 ;;		On entry : 0/0
  1220 ;;		On exit  : 0/0
  1221 ;;		Unchanged: 0/0
  1222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1223 ;;      Params:         0       0       0       0       0       0       0       0       0
  1224 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1225 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1226 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1227 ;;Total ram usage:        1 bytes
  1228 ;; Hardware stack levels used:    1
  1229 ;; This function calls:
  1230 ;;		Nothing
  1231 ;; This function is called by:
  1232 ;;		_Interrupcion
  1233 ;;		i2_putsUSART
  1234 ;; This function uses a non-reentrant model
  1235 ;;
  1236                           
  1237                           	psect	text9
  1238  000B78                     __ptext9:
  1239                           	opt stack 0
  1240  000B78                     i2_WriteUSART:
  1241                           	opt stack 26
  1242                           
  1243                           ;incstack = 0
  1244                           ;i2WriteUSART@data stored from wreg
  1245  000B78  6E01               	movwf	i2WriteUSART@data,c
  1246  000B7A  ACAC               	btfss	4012,6,c	;volatile
  1247  000B7C  D003               	goto	i2l904
  1248  000B7E  90AC               	bcf	4012,0,c	;volatile
  1249  000B80  B241               	btfsc	_USART_Status,1,c
  1250  000B82  80AC               	bsf	4012,0,c	;volatile
  1251  000B84                     i2l904:
  1252  000B84  C001  FFAD         	movff	i2WriteUSART@data,4013	;volatile
  1253  000B88  0012               	return	
  1254  000B8A                     __end_ofi2_WriteUSART:
  1255                           	opt stack 0
  1256                           pclatu	equ	0xFFB
  1257                           pclath	equ	0xFFA
  1258                           tblptru	equ	0xFF8
  1259                           tblptrh	equ	0xFF7
  1260                           tblptrl	equ	0xFF6
  1261                           tablat	equ	0xFF5
  1262                           prodh	equ	0xFF4
  1263                           prodl	equ	0xFF3
  1264                           intcon	equ	0xFF2
  1265                           indf0	equ	0xFEF
  1266                           postinc0	equ	0xFEE
  1267                           fsr0h	equ	0xFEA
  1268                           fsr0l	equ	0xFE9
  1269                           wreg	equ	0xFE8
  1270                           postdec1	equ	0xFE5
  1271                           fsr1h	equ	0xFE2
  1272                           fsr1l	equ	0xFE1
  1273                           fsr2h	equ	0xFDA
  1274                           fsr2l	equ	0xFD9
  1275                           status	equ	0xFD8
  1276                           
  1277 ;; *************** function _ReadUSART *****************
  1278 ;; Defined at:
  1279 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\USART\uread.c"
  1280 ;; Parameters:    Size  Location     Type
  1281 ;;		None
  1282 ;; Auto vars:     Size  Location     Type
  1283 ;;  data            1    0[COMRAM] unsigned char 
  1284 ;; Return value:  Size  Location     Type
  1285 ;;                  1    wreg      unsigned char 
  1286 ;; Registers used:
  1287 ;;		wreg, status,2, status,0
  1288 ;; Tracked objects:
  1289 ;;		On entry : 0/0
  1290 ;;		On exit  : 0/0
  1291 ;;		Unchanged: 0/0
  1292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1293 ;;      Params:         0       0       0       0       0       0       0       0       0
  1294 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1295 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1296 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1297 ;;Total ram usage:        1 bytes
  1298 ;; Hardware stack levels used:    1
  1299 ;; This function calls:
  1300 ;;		Nothing
  1301 ;; This function is called by:
  1302 ;;		_Interrupcion
  1303 ;; This function uses a non-reentrant model
  1304 ;;
  1305                           
  1306                           	psect	text10
  1307  000B2C                     __ptext10:
  1308                           	opt stack 0
  1309  000B2C                     _ReadUSART:
  1310                           	opt stack 27
  1311                           
  1312                           ;incstack = 0
  1313  000B2C  0EF2               	movlw	242
  1314  000B2E  1641               	andwf	_USART_Status,f,c
  1315  000B30  ACAB               	btfss	4011,6,c	;volatile
  1316  000B32  D003               	goto	i2l113
  1317  000B34  9041               	bcf	_USART_Status,0,c
  1318  000B36  B0AB               	btfsc	4011,0,c	;volatile
  1319  000B38  8041               	bsf	_USART_Status,0,c
  1320  000B3A                     i2l113:
  1321  000B3A  B4AB               	btfsc	4011,2,c	;volatile
  1322  000B3C  8441               	bsf	_USART_Status,2,c
  1323  000B3E  B2AB               	btfsc	4011,1,c	;volatile
  1324  000B40  8641               	bsf	_USART_Status,3,c
  1325  000B42  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  1326  000B46  5001               	movf	ReadUSART@data,w,c
  1327  000B48  0012               	return	
  1328  000B4A                     __end_of_ReadUSART:
  1329                           	opt stack 0
  1330                           pclatu	equ	0xFFB
  1331                           pclath	equ	0xFFA
  1332                           tblptru	equ	0xFF8
  1333                           tblptrh	equ	0xFF7
  1334                           tblptrl	equ	0xFF6
  1335                           tablat	equ	0xFF5
  1336                           prodh	equ	0xFF4
  1337                           prodl	equ	0xFF3
  1338                           intcon	equ	0xFF2
  1339                           indf0	equ	0xFEF
  1340                           postinc0	equ	0xFEE
  1341                           fsr0h	equ	0xFEA
  1342                           fsr0l	equ	0xFE9
  1343                           wreg	equ	0xFE8
  1344                           postdec1	equ	0xFE5
  1345                           fsr1h	equ	0xFE2
  1346                           fsr1l	equ	0xFE1
  1347                           fsr2h	equ	0xFDA
  1348                           fsr2l	equ	0xFD9
  1349                           status	equ	0xFD8
  1350                           pclatu	equ	0xFFB
  1351                           pclath	equ	0xFFA
  1352                           tblptru	equ	0xFF8
  1353                           tblptrh	equ	0xFF7
  1354                           tblptrl	equ	0xFF6
  1355                           tablat	equ	0xFF5
  1356                           prodh	equ	0xFF4
  1357                           prodl	equ	0xFF3
  1358                           intcon	equ	0xFF2
  1359                           indf0	equ	0xFEF
  1360                           postinc0	equ	0xFEE
  1361                           fsr0h	equ	0xFEA
  1362                           fsr0l	equ	0xFE9
  1363                           wreg	equ	0xFE8
  1364                           postdec1	equ	0xFE5
  1365                           fsr1h	equ	0xFE2
  1366                           fsr1l	equ	0xFE1
  1367                           fsr2h	equ	0xFDA
  1368                           fsr2l	equ	0xFD9
  1369                           status	equ	0xFD8
  1370                           
  1371                           	psect	rparam
  1372  0000                     pclatu	equ	0xFFB
  1373                           pclath	equ	0xFFA
  1374                           tblptru	equ	0xFF8
  1375                           tblptrh	equ	0xFF7
  1376                           tblptrl	equ	0xFF6
  1377                           tablat	equ	0xFF5
  1378                           prodh	equ	0xFF4
  1379                           prodl	equ	0xFF3
  1380                           intcon	equ	0xFF2
  1381                           indf0	equ	0xFEF
  1382                           postinc0	equ	0xFEE
  1383                           fsr0h	equ	0xFEA
  1384                           fsr0l	equ	0xFE9
  1385                           wreg	equ	0xFE8
  1386                           postdec1	equ	0xFE5
  1387                           fsr1h	equ	0xFE2
  1388                           fsr1l	equ	0xFE1
  1389                           fsr2h	equ	0xFDA
  1390                           fsr2l	equ	0xFD9
  1391                           status	equ	0xFD8


Data Sizes:
    Strings     12
    Constant    0
    Data        27
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     36      65
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    putsUSART@data	PTR unsigned char  size(2) Largest target is 27
		 -> STR_1(CODE[12]), MensajeTx(COMRAM[27]), 


Critical Paths under _main in COMRAM

    _main->_x_delay_ms
    _x_delay_ms->___awdiv
    _putsUSART->_WriteUSART

Critical Paths under _Interrupcion in COMRAM

    _Interrupcion->i2_putsUSART
    i2_putsUSART->i2_WriteUSART

Critical Paths under _main in BANK0

    None.

Critical Paths under _Interrupcion in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Interrupcion in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Interrupcion in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Interrupcion in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Interrupcion in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Interrupcion in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Interrupcion in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Interrupcion in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     779
                                             32 COMRAM     4     4      0
                          _OpenUSART
                          _baudUSART
                          _putsUSART
                         _x_delay_ms
 ---------------------------------------------------------------------------------
 (1) _x_delay_ms                                           5     3      2     384
                                             27 COMRAM     5     3      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     301
                                             19 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _putsUSART                                            4     2      2     132
                                             20 COMRAM     4     2      2
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (2) _WriteUSART                                           1     1      0      15
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _baudUSART                                            1     1      0      15
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     203
                                             19 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _Interrupcion                                        14    14      0     129
                                              5 COMRAM    14    14      0
                          _ReadUSART
                       i2_WriteUSART
                        i2_putsUSART
 ---------------------------------------------------------------------------------
 (4) i2_putsUSART                                          4     2      2      92
                                              1 COMRAM     4     2      2
                       i2_WriteUSART
 ---------------------------------------------------------------------------------
 (5) i2_WriteUSART                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _ReadUSART                                            1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenUSART
   _baudUSART
   _putsUSART
     _WriteUSART
   _x_delay_ms
     ___awdiv

 _Interrupcion (ROOT)
   _ReadUSART
   i2_WriteUSART
   i2_putsUSART
     i2_WriteUSART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     24      41       1       68.4%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      41      20        0.0%
DATA                 0      0      41       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Wed Nov 12 10:17:12 2014

                     l39 0A92                       l90 0980                       l83 095E  
                     l92 09A2                       l87 0972                       l88 0974  
                     l89 097E             ___awdiv@sign 0019              __CFG_BORV$0 000000  
           __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000  
           __CFG_CP3$OFF 000000                      l100 09A4    __size_ofi2_WriteUSART 0012  
                    l800 0952                      l750 0868                      l808 0960  
                    l728 0B72                      l752 0870                      l744 0852  
                    l770 08A8                      l762 0890                      l754 0874  
                    l738 0832                      l766 089A                      l784 0AD2  
                    l788 0AE8                      l884 0AA2             __CFG_CPB$OFF 000000  
                    u230 09C8                      u240 09F8                      u237 09BE  
                    u247 09EE             __CFG_CPD$OFF 000000                      u457 0AD8  
           __CFG_BOR$OFF 000000                      wreg 000FE8      __end_ofi2_putsUSART 0A5C  
           __CFG_LVP$OFF 000000               _CaracterRx 0040             __CFG_WDT$OFF 000000  
                   STR_1 0801                     _PIE1 000F9D                     i2l51 08F6  
                   i2l48 08E6             __CFG_PWRT$ON 000000                     _main 0A5C  
                   fsr0h 000FEA                     fsr1h 000FE2                     indf0 000FEF  
                   fsr0l 000FE9                     fsr2h 000FDA                     fsr1l 000FE1  
                   fsr2l 000FD9      baudUSART@baudconfig 0014                     pclat 000FFA  
                   prodh 000FF4                     prodl 000FF3                     start 0018  
          __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000             i2_WriteUSART 0B78  
          __CFG_PLLDIV$5 000000                    ?_main 0001          __end_of___awdiv 08B2  
        ___awdiv@divisor 0016                    i2l100 0A00                    i2l113 0B3A  
                  i2l904 0B84          ___awdiv@counter 0018                    _RCREG 000FAE  
                  _RCSTA 000FAB                    _SPBRG 000FAF            __CFG_USBDIV$1 000000  
                  _TRISC 000F94                    _TXREG 000FAD                    _TXSTA 000FAC  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
         __CFG_EBTRB$OFF 000000                    tablat 000FF5                    status 000FD8  
         WriteUSART@data 0014          __initialization 0AFE             __end_of_main 0AB4  
         x_delay_ms@cont 001F                   ??_main 0021              i2_putsUSART 0A00  
          __activetblptr 000002          __CFG_CCP2MX$OFF 000000         ___awdiv@dividend 0014  
     __size_of_ReadUSART 001E                   _SPBRGH 000FB0            ?_Interrupcion 0001  
         __CFG_VREGEN$ON 000000           __CFG_XINST$OFF 000000       __size_of_OpenUSART 0068  
              ??___awdiv 0018         ___awdiv@quotient 001A             __pdataCOMRAM 0025  
           __mediumconst 0000                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8           ??_Interrupcion 0006               __accesstop 0060  
__end_of__initialization 0B22          __CFG_PBADEN$OFF 000000       __size_of_baudUSART 0008  
             _WriteUSART 0B66           __pcstackCOMRAM 0001           main@baudconfig 0024  
      __end_of_ReadUSART 0B4A            ReadUSART@data 0001        __end_of_OpenUSART 09A4  
          putsUSART@data 0015                  _BAUDCON 000FB8        __end_of_baudUSART 0B92  
                i2u40_40 0A24                  i2u40_47 0A1A                  i2u41_40 0A54  
                i2u41_47 0A4A       __size_of_putsUSART 005C              x_delay_ms@x 001C  
                __Hparam 0000                  __Lparam 0000              ?_WriteUSART 0001  
                ___awdiv 080E             __psmallconst 0800          __CFG_STVREN$OFF 000000  
                __pcinit 0AFE                  __ramtop 0800                  __ptext0 0A5C  
                __ptext1 0AB4                  __ptext2 080E                  __ptext3 09A4  
                __ptext4 0B66                  __ptext5 0B8A                  __ptext6 093C  
                __ptext8 0A00                  __ptext9 0B78             ?i2_putsUSART 0002  
   __end_of_Interrupcion 093C           __pintcode_body 08B2     end_of_initialization 0B22  
          __Lmediumconst 0000                  int_func 08B2               _x_delay_ms 0AB4  
              _RCSTAbits 000FAB                  postdec1 000FE5                  postinc0 000FEE  
      __end_of_putsUSART 0A00                _PORTCbits 000F82                _TRISCbits 000F94  
    __size_of_WriteUSART 0012               main@config 0023                _TXSTAbits 000FAC  
          __pidataCOMRAM 0B4A      start_initialization 0AFE                _ReadUSART 0B2C  
              _MensajeTx 0025                _OpenUSART 093C              ?_x_delay_ms 001C  
          ?i2_WriteUSART 0001    __size_of_Interrupcion 0934         __CFG_LPT1OSC$OFF 000000  
            __pbssCOMRAM 0040     __size_ofi2_putsUSART 005C               ?_ReadUSART 0001  
    __end_of__stringdata 080D                _baudUSART 0B8A               ?_OpenUSART 0014  
           _Interrupcion 0008           ??i2_WriteUSART 0001             ??_WriteUSART 0014  
              __pintcode 0008                 ?___awdiv 0014              __smallconst 0800  
    __size_of_x_delay_ms 004A       __end_of_WriteUSART 0B78               ?_baudUSART 0001  
               _PIE1bits 000F9D                 _PIR1bits 000F9E         __CFG_WDTPS$32768 000000  
              _putsUSART 09A4              __stringdata 0801              ??_ReadUSART 0001  
              main@spbrg 0021          i2putsUSART@data 0002                copy_data0 0B16  
            ??_OpenUSART 0016          OpenUSART@config 0019                 __Hrparam 0000  
               __Lrparam 0000         __size_of___awdiv 00A4               ?_putsUSART 0015  
   __end_ofi2_WriteUSART 0B8A                 __ptext10 0B2C              ??_baudUSART 0014  
          __size_of_main 0058             ??_x_delay_ms 001E    __CFG_CPUDIV$OSC1_PLL2 000000  
             _INTCONbits 000FF2       __end_of_x_delay_ms 0AFE           OpenUSART@spbrg 0014  
               intlevel2 0000            ??i2_putsUSART 0004              ??_putsUSART 0017  
       i2WriteUSART@data 0001       __CFG_FOSC$HSPLL_HS 000000             _USART_Status 0041  
