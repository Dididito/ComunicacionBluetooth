

Microchip Technology PIC18 LITE Macro Assembler V1.32 build 58300 
                                                                                               Fri Nov 14 11:01:01 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    21  0000                     
    22                           	psect	idataCOMRAM
    23  007A01                     __pidataCOMRAM:
    24                           	opt stack 0
    25                           
    26                           ;initializer for _MensajeTx
    27  007A01  48                 	db	72
    28  007A02  4F                 	db	79
    29  007A03  4C                 	db	76
    30  007A04  41                 	db	65
    31  007A05  0A                 	db	10
    32  007A06  0D                 	db	13
    33  007A07  00                 	db	0
    34                           
    35                           ;initializer for _Txdata
    36  007A08  4D                 	db	77
    37  007A09  49                 	db	73
    38  007A0A  43                 	db	67
    39  007A0B  52                 	db	82
    40  007A0C  4F                 	db	79
    41  007A0D  43                 	db	67
    42  007A0E  48                 	db	72
    43  007A0F  49                 	db	73
    44  007A10  50                 	db	80
    45  007A11  5F                 	db	95
    46  007A12  55                 	db	85
    47  007A13  53                 	db	83
    48  007A14  41                 	db	65
    49  007A15  52                 	db	82
    50  007A16  54                 	db	84
    51  007A17  00                 	db	0
    52  0000                     _BAUDCON	set	4024
    53  0000                     _PIE1	set	3997
    54  0000                     _PIE1bits	set	3997
    55  0000                     _PIR1bits	set	3998
    56  0000                     _PORTCbits	set	3970
    57  0000                     _RCREG	set	4014
    58  0000                     _RCSTA	set	4011
    59  0000                     _RCSTAbits	set	4011
    60  0000                     _SPBRG	set	4015
    61  0000                     _SPBRGH	set	4016
    62  0000                     _TRISC	set	3988
    63  0000                     _TRISCbits	set	3988
    64  0000                     _TXREG	set	4013
    65  0000                     _TXSTA	set	4012
    66  0000                     _TXSTAbits	set	4012
    67                           
    68                           ; #config settings
    69  0000                     
    70                           	psect	cinit
    71  007A88                     __pcinit:
    72                           	opt stack 0
    73  007A88                     start_initialization:
    74                           	opt stack 0
    75  007A88                     __initialization:
    76                           	opt stack 0
    77                           
    78                           ; Clear objects allocated to COMRAM (27 bytes)
    79  007A88  EE00  F001         	lfsr	0,__pbssCOMRAM
    80  007A8C  0E1B               	movlw	27
    81  007A8E                     clear_0:
    82  007A8E  6AEE               	clrf	postinc0,c
    83  007A90  06E8               	decf	wreg,f,c
    84  007A92  E1FD               	bnz	clear_0
    85                           
    86                           ; Initialize objects allocated to COMRAM (23 bytes)
    87                           ; load TBLPTR registers with __pidataCOMRAM
    88  007A94  0E01               	movlw	low __pidataCOMRAM
    89  007A96  6EF6               	movwf	tblptrl,c
    90  007A98  0E7A               	movlw	high __pidataCOMRAM
    91  007A9A  6EF7               	movwf	tblptrh,c
    92  007A9C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    93  007A9E  6EF8               	movwf	tblptru,c
    94  007AA0  EE00  F01C         	lfsr	0,__pdataCOMRAM
    95  007AA4  EE10 F017          	lfsr	1,23
    96  007AA8                     copy_data0:
    97  007AA8  0009               	tblrd		*+
    98  007AAA  CFF5 FFEE          	movff	tablat,postinc0
    99  007AAE  50E5               	movf	postdec1,w,c
   100  007AB0  50E1               	movf	fsr1l,w,c
   101  007AB2  E1FA               	bnz	copy_data0
   102  007AB4                     end_of_initialization:
   103                           	opt stack 0
   104  007AB4                     __end_of__initialization:
   105                           	opt stack 0
   106  007AB4  0100               	movlb	0
   107  007AB6  EF08  F03E         	goto	_main	;jump to C main() function
   108                           tblptru	equ	0xFF8
   109                           tblptrh	equ	0xFF7
   110                           tblptrl	equ	0xFF6
   111                           tablat	equ	0xFF5
   112                           postinc0	equ	0xFEE
   113                           wreg	equ	0xFE8
   114                           postdec1	equ	0xFE5
   115                           fsr1l	equ	0xFE1
   116                           
   117                           	psect	bssCOMRAM
   118  000001                     __pbssCOMRAM:
   119                           	opt stack 0
   120  000001                     _CaracterRx:
   121                           	opt stack 0
   122  000001                     	ds	1
   123  000002                     _USART_Status:
   124                           	opt stack 0
   125  000002                     	ds	1
   126  000003                     _Rxdata:
   127                           	opt stack 0
   128  000003                     	ds	25
   129                           tblptru	equ	0xFF8
   130                           tblptrh	equ	0xFF7
   131                           tblptrl	equ	0xFF6
   132                           tablat	equ	0xFF5
   133                           postinc0	equ	0xFEE
   134                           wreg	equ	0xFE8
   135                           postdec1	equ	0xFE5
   136                           fsr1l	equ	0xFE1
   137                           
   138                           	psect	dataCOMRAM
   139  00001C                     __pdataCOMRAM:
   140                           	opt stack 0
   141  00001C                     _MensajeTx:
   142                           	opt stack 0
   143  00001C                     	ds	7
   144  000023                     _Txdata:
   145                           	opt stack 0
   146  000023                     	ds	16
   147                           tblptru	equ	0xFF8
   148                           tblptrh	equ	0xFF7
   149                           tblptrl	equ	0xFF6
   150                           tablat	equ	0xFF5
   151                           postinc0	equ	0xFEE
   152                           wreg	equ	0xFE8
   153                           postdec1	equ	0xFE5
   154                           fsr1l	equ	0xFE1
   155                           
   156                           	psect	cstackCOMRAM
   157  000033                     __pcstackCOMRAM:
   158                           	opt stack 0
   159  000033                     ?___awdiv:
   160                           	opt stack 0
   161  000033                     baudUSART@baudconfig:
   162                           	opt stack 0
   163  000033                     ReadUSART@data:
   164                           	opt stack 0
   165  000033                     WriteUSART@data:
   166                           	opt stack 0
   167  000033                     OpenUSART@spbrg:
   168                           	opt stack 0
   169  000033                     ___awdiv@dividend:
   170                           	opt stack 0
   171                           
   172                           ; 2 bytes @ 0x0
   173  000033                     	ds	1
   174  000034                     getsUSART@buffer:
   175                           	opt stack 0
   176  000034                     putsUSART@data:
   177                           	opt stack 0
   178                           
   179                           ; 2 bytes @ 0x1
   180  000034                     	ds	1
   181  000035                     ??_OpenUSART:
   182  000035                     ___awdiv@divisor:
   183                           	opt stack 0
   184                           
   185                           ; 2 bytes @ 0x2
   186  000035                     	ds	1
   187  000036                     getsUSART@len:
   188                           	opt stack 0
   189                           
   190                           ; 1 bytes @ 0x3
   191  000036                     	ds	1
   192  000037                     getsUSART@data:
   193                           	opt stack 0
   194  000037                     ___awdiv@counter:
   195                           	opt stack 0
   196                           
   197                           ; 1 bytes @ 0x4
   198  000037                     	ds	1
   199  000038                     getsUSART@i:
   200                           	opt stack 0
   201  000038                     OpenUSART@config:
   202                           	opt stack 0
   203  000038                     ___awdiv@sign:
   204                           	opt stack 0
   205                           
   206                           ; 1 bytes @ 0x5
   207  000038                     	ds	1
   208  000039                     ___awdiv@quotient:
   209                           	opt stack 0
   210                           
   211                           ; 2 bytes @ 0x6
   212  000039                     	ds	2
   213  00003B                     x_delay_ms@x:
   214                           	opt stack 0
   215                           
   216                           ; 2 bytes @ 0x8
   217  00003B                     	ds	2
   218  00003D                     ??_x_delay_ms:
   219                           
   220                           ; 0 bytes @ 0xA
   221  00003D                     	ds	1
   222  00003E                     x_delay_ms@cont:
   223                           	opt stack 0
   224                           
   225                           ; 2 bytes @ 0xB
   226  00003E                     	ds	2
   227  000040                     main@spbrg:
   228                           	opt stack 0
   229                           
   230                           ; 2 bytes @ 0xD
   231  000040                     	ds	2
   232  000042                     main@config:
   233                           	opt stack 0
   234                           
   235                           ; 1 bytes @ 0xF
   236  000042                     	ds	1
   237  000043                     main@baudconfig:
   238                           	opt stack 0
   239                           
   240                           ; 1 bytes @ 0x10
   241  000043                     	ds	1
   242                           tblptru	equ	0xFF8
   243                           tblptrh	equ	0xFF7
   244                           tblptrl	equ	0xFF6
   245                           tablat	equ	0xFF5
   246                           postinc0	equ	0xFEE
   247                           wreg	equ	0xFE8
   248                           postdec1	equ	0xFE5
   249                           fsr1l	equ	0xFE1
   250                           
   251 ;;
   252 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   253 ;;
   254 ;; *************** function _main *****************
   255 ;; Defined at:
   256 ;;		line 23 in file "main.c"
   257 ;; Parameters:    Size  Location     Type
   258 ;;		None
   259 ;; Auto vars:     Size  Location     Type
   260 ;;  spbrg           2   13[COMRAM] unsigned int 
   261 ;;  baudconfig      1   16[COMRAM] unsigned char 
   262 ;;  config          1   15[COMRAM] unsigned char 
   263 ;; Return value:  Size  Location     Type
   264 ;;		None               void
   265 ;; Registers used:
   266 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, cstack
   267 ;; Tracked objects:
   268 ;;		On entry : 0/0
   269 ;;		On exit  : 0/0
   270 ;;		Unchanged: 0/0
   271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   272 ;;      Params:         0       0       0       0       0       0       0       0       0
   273 ;;      Locals:         4       0       0       0       0       0       0       0       0
   274 ;;      Temps:          0       0       0       0       0       0       0       0       0
   275 ;;      Totals:         4       0       0       0       0       0       0       0       0
   276 ;;Total ram usage:        4 bytes
   277 ;; Hardware stack levels required when called:    2
   278 ;; This function calls:
   279 ;;		_OpenUSART
   280 ;;		_baudUSART
   281 ;;		_getsUSART
   282 ;;		_putsUSART
   283 ;;		_x_delay_ms
   284 ;; This function is called by:
   285 ;;		Startup code after reset
   286 ;; This function uses a non-reentrant model
   287 ;;
   288                           
   289                           	psect	text0
   290  007C10                     __ptext0:
   291                           	opt stack 0
   292  007C10                     _main:
   293                           	opt stack 28
   294                           
   295                           ;main.c: 25: TRISC = 0b00000000;
   296                           
   297                           ;incstack = 0
   298  007C10  0E00               	movlw	0
   299  007C12  6E94               	movwf	3988,c	;volatile
   300                           
   301                           ;main.c: 27: RCSTA&=0b01001111,TXSTAbits.TXEN=0,PIE1&=0b11001111;
   302  007C14  0E4F               	movlw	79
   303  007C16  16AB               	andwf	4011,f,c	;volatile
   304  007C18  9AAC               	bcf	4012,5,c	;volatile
   305  007C1A  0ECF               	movlw	207
   306  007C1C  169D               	andwf	3997,f,c	;volatile
   307                           
   308                           ;main.c: 29: unsigned char config = 0b01111111 & 0b11111111 & 0b11111110 & 0b11111101 & 
      +                          0b11111111&0b11111111;
   309  007C1E  0E7C               	movlw	124
   310  007C20  6E42               	movwf	main@config,c
   311                           
   312                           ;main.c: 30: unsigned int spbrg = 42;
   313  007C22  0E00               	movlw	0
   314  007C24  6E41               	movwf	main@spbrg+1,c
   315  007C26  0E2A               	movlw	42
   316  007C28  6E40               	movwf	main@spbrg,c
   317                           
   318                           ;main.c: 31: OpenUSART(config, spbrg);
   319  007C2A  C040  F033         	movff	main@spbrg,OpenUSART@spbrg
   320  007C2E  C041  F034         	movff	main@spbrg+1,OpenUSART@spbrg+1
   321  007C32  5042               	movf	main@config,w,c
   322  007C34  EC82  F03D         	call	_OpenUSART
   323                           
   324                           ;main.c: 33: unsigned char baudconfig = 0b11111111&0b11111110;
   325  007C38  0EFE               	movlw	254
   326  007C3A  6E43               	movwf	main@baudconfig,c
   327                           
   328                           ;main.c: 34: baudUSART(baudconfig);
   329  007C3C  5043               	movf	main@baudconfig,w,c
   330  007C3E  ECF3  F03C         	call	_baudUSART
   331  007C42                     l37:
   332  007C42  A2AC               	btfss	4012,1,c	;volatile
   333  007C44  D7FE               	goto	l37
   334                           
   335                           ;main.c: 41: putsUSART((char*)Txdata);
   336  007C46  0E00               	movlw	high _Txdata
   337  007C48  6E35               	movwf	putsUSART@data+1,c
   338  007C4A  0E23               	movlw	low _Txdata
   339  007C4C  6E34               	movwf	putsUSART@data,c
   340  007C4E  EC1B  F03D         	call	_putsUSART	;wreg free
   341                           
   342                           ;main.c: 42: getsUSART((char*)Rxdata,24);
   343  007C52  0E00               	movlw	high _Rxdata
   344  007C54  6E35               	movwf	getsUSART@buffer+1,c
   345  007C56  0E03               	movlw	low _Rxdata
   346  007C58  6E34               	movwf	getsUSART@buffer,c
   347  007C5A  0E18               	movlw	24
   348  007C5C  6E36               	movwf	getsUSART@len,c
   349  007C5E  EC2E  F03D         	call	_getsUSART	;wreg free
   350  007C62                     l40:
   351  007C62  A2AC               	btfss	4012,1,c	;volatile
   352  007C64  D7FE               	goto	l40
   353                           
   354                           ;main.c: 44: putsUSART((char*)Rxdata);
   355  007C66  0E00               	movlw	high _Rxdata
   356  007C68  6E35               	movwf	putsUSART@data+1,c
   357  007C6A  0E03               	movlw	low _Rxdata
   358  007C6C  6E34               	movwf	putsUSART@data,c
   359  007C6E  EC1B  F03D         	call	_putsUSART	;wreg free
   360                           
   361                           ;main.c: 46: RCSTA&=0b01001111,TXSTAbits.TXEN=0,PIE1&=0b11001111;
   362  007C72  0E4F               	movlw	79
   363  007C74  16AB               	andwf	4011,f,c	;volatile
   364  007C76  9AAC               	bcf	4012,5,c	;volatile
   365  007C78  0ECF               	movlw	207
   366  007C7A  169D               	andwf	3997,f,c	;volatile
   367                           
   368                           ;main.c: 47: OpenUSART(config, spbrg);
   369  007C7C  C040  F033         	movff	main@spbrg,OpenUSART@spbrg
   370  007C80  C041  F034         	movff	main@spbrg+1,OpenUSART@spbrg+1
   371  007C84  5042               	movf	main@config,w,c
   372  007C86  EC82  F03D         	call	_OpenUSART
   373                           
   374                           ;main.c: 48: baudUSART(baudconfig);
   375  007C8A  5043               	movf	main@baudconfig,w,c
   376  007C8C  ECF3  F03C         	call	_baudUSART
   377  007C90                     l43:
   378  007C90  A2AC               	btfss	4012,1,c	;volatile
   379  007C92  D7FE               	goto	l43
   380                           
   381                           ;main.c: 51: putsUSART((char*)Txdata);
   382  007C94  0E00               	movlw	high _Txdata
   383  007C96  6E35               	movwf	putsUSART@data+1,c
   384  007C98  0E23               	movlw	low _Txdata
   385  007C9A  6E34               	movwf	putsUSART@data,c
   386  007C9C  EC1B  F03D         	call	_putsUSART	;wreg free
   387                           
   388                           ;main.c: 52: getsUSART((char*)Rxdata,24);
   389  007CA0  0E00               	movlw	high _Rxdata
   390  007CA2  6E35               	movwf	getsUSART@buffer+1,c
   391  007CA4  0E03               	movlw	low _Rxdata
   392  007CA6  6E34               	movwf	getsUSART@buffer,c
   393  007CA8  0E18               	movlw	24
   394  007CAA  6E36               	movwf	getsUSART@len,c
   395  007CAC  EC2E  F03D         	call	_getsUSART	;wreg free
   396  007CB0                     l46:
   397  007CB0  A2AC               	btfss	4012,1,c	;volatile
   398  007CB2  D7FE               	goto	l46
   399                           
   400                           ;main.c: 54: putsUSART((char*)Rxdata);
   401  007CB4  0E00               	movlw	high _Rxdata
   402  007CB6  6E35               	movwf	putsUSART@data+1,c
   403  007CB8  0E03               	movlw	low _Rxdata
   404  007CBA  6E34               	movwf	putsUSART@data,c
   405  007CBC  EC1B  F03D         	call	_putsUSART	;wreg free
   406  007CC0                     l49:
   407  007CC0  A2AC               	btfss	4012,1,c	;volatile
   408  007CC2  D7FE               	goto	l49
   409                           
   410                           ;main.c: 57: putsUSART((char*)Txdata);
   411  007CC4  0E00               	movlw	high _Txdata
   412  007CC6  6E35               	movwf	putsUSART@data+1,c
   413  007CC8  0E23               	movlw	low _Txdata
   414  007CCA  6E34               	movwf	putsUSART@data,c
   415  007CCC  EC1B  F03D         	call	_putsUSART	;wreg free
   416                           
   417                           ;main.c: 58: getsUSART((char*)Rxdata,24);
   418  007CD0  0E00               	movlw	high _Rxdata
   419  007CD2  6E35               	movwf	getsUSART@buffer+1,c
   420  007CD4  0E03               	movlw	low _Rxdata
   421  007CD6  6E34               	movwf	getsUSART@buffer,c
   422  007CD8  0E18               	movlw	24
   423  007CDA  6E36               	movwf	getsUSART@len,c
   424  007CDC  EC2E  F03D         	call	_getsUSART	;wreg free
   425  007CE0                     l52:
   426  007CE0  A2AC               	btfss	4012,1,c	;volatile
   427  007CE2  D7FE               	goto	l52
   428                           
   429                           ;main.c: 60: putsUSART((char*)Rxdata);
   430  007CE4  0E00               	movlw	high _Rxdata
   431  007CE6  6E35               	movwf	putsUSART@data+1,c
   432  007CE8  0E03               	movlw	low _Rxdata
   433  007CEA  6E34               	movwf	putsUSART@data,c
   434  007CEC  EC1B  F03D         	call	_putsUSART	;wreg free
   435  007CF0                     l917:
   436                           
   437                           ;main.c: 64: x_delay_ms(250);
   438  007CF0  0E00               	movlw	0
   439  007CF2  6E3C               	movwf	x_delay_ms@x+1,c
   440  007CF4  0EFA               	movlw	250
   441  007CF6  6E3B               	movwf	x_delay_ms@x,c
   442  007CF8  EC5D  F03D         	call	_x_delay_ms	;wreg free
   443                           
   444                           ;main.c: 65: PORTCbits.RC1 = ~PORTCbits.RC1;;
   445  007CFC  7282               	btg	3970,1,c	;volatile
   446  007CFE  D7F8               	goto	l917
   447  007D00                     __end_of_main:
   448                           	opt stack 0
   449                           tblptru	equ	0xFF8
   450                           tblptrh	equ	0xFF7
   451                           tblptrl	equ	0xFF6
   452                           tablat	equ	0xFF5
   453                           postinc0	equ	0xFEE
   454                           wreg	equ	0xFE8
   455                           postdec1	equ	0xFE5
   456                           fsr1l	equ	0xFE1
   457                           
   458 ;; *************** function _x_delay_ms *****************
   459 ;; Defined at:
   460 ;;		line 15 in file "main.c"
   461 ;; Parameters:    Size  Location     Type
   462 ;;  x               2    8[COMRAM] int 
   463 ;; Auto vars:     Size  Location     Type
   464 ;;  cont            2   11[COMRAM] int 
   465 ;; Return value:  Size  Location     Type
   466 ;;		None               void
   467 ;; Registers used:
   468 ;;		wreg, status,2, status,0, prodl, cstack
   469 ;; Tracked objects:
   470 ;;		On entry : 0/0
   471 ;;		On exit  : 0/0
   472 ;;		Unchanged: 0/0
   473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   474 ;;      Params:         2       0       0       0       0       0       0       0       0
   475 ;;      Locals:         2       0       0       0       0       0       0       0       0
   476 ;;      Temps:          1       0       0       0       0       0       0       0       0
   477 ;;      Totals:         5       0       0       0       0       0       0       0       0
   478 ;;Total ram usage:        5 bytes
   479 ;; Hardware stack levels used:    1
   480 ;; Hardware stack levels required when called:    1
   481 ;; This function calls:
   482 ;;		___awdiv
   483 ;; This function is called by:
   484 ;;		_main
   485 ;; This function uses a non-reentrant model
   486 ;;
   487                           
   488                           	psect	text1
   489  007ABA                     __ptext1:
   490                           	opt stack 0
   491  007ABA                     _x_delay_ms:
   492                           	opt stack 28
   493                           
   494                           ;main.c: 16: int cont = x/10;
   495                           
   496                           ;incstack = 0
   497  007ABA  C03B  F033         	movff	x_delay_ms@x,___awdiv@dividend
   498  007ABE  C03C  F034         	movff	x_delay_ms@x+1,___awdiv@dividend+1
   499  007AC2  0E00               	movlw	0
   500  007AC4  6E36               	movwf	___awdiv@divisor+1,c
   501  007AC6  0E0A               	movlw	10
   502  007AC8  6E35               	movwf	___awdiv@divisor,c
   503  007ACA  ECB6  F03D         	call	___awdiv	;wreg free
   504  007ACE  C033  F03E         	movff	?___awdiv,x_delay_ms@cont
   505  007AD2  C034  F03F         	movff	?___awdiv+1,x_delay_ms@cont+1
   506                           
   507                           ;main.c: 17: while (cont > 0){
   508  007AD6  D00B               	goto	l813
   509  007AD8                     l809:
   510                           
   511                           ;main.c: 18: _delay((unsigned long)((10)*(48000000/4000.0)));
   512  007AD8  0E9C               	movlw	156
   513  007ADA  6E3D               	movwf	??_x_delay_ms& (0+255),c
   514  007ADC  0ED7               	movlw	215
   515  007ADE                     u347:
   516  007ADE  2EE8               	decfsz	wreg,f,c
   517  007AE0  D7FE               	goto	u347
   518  007AE2  2E3D               	decfsz	??_x_delay_ms& (0+255),f,c
   519  007AE4  D7FC               	goto	u347
   520  007AE6  F000               	nop	
   521                           
   522                           ;main.c: 19: cont --;
   523  007AE8  063E               	decf	x_delay_ms@cont,f,c
   524  007AEA  A0D8               	btfss	status,0,c
   525  007AEC  063F               	decf	x_delay_ms@cont+1,f,c
   526  007AEE                     l813:
   527  007AEE  503F               	movf	x_delay_ms@cont+1,w,c
   528  007AF0  0A80               	xorlw	128
   529  007AF2  6EF3               	movwf	prodl,c
   530  007AF4  0E80               	movlw	128
   531  007AF6  5CF3               	subwf	prodl,w,c
   532  007AF8  0E01               	movlw	1
   533  007AFA  B4D8               	btfsc	status,2,c
   534  007AFC  5C3E               	subwf	x_delay_ms@cont,w,c
   535  007AFE  A0D8               	btfss	status,0,c
   536  007B00  0012               	return	
   537  007B02  D7EA               	goto	l809
   538  007B04                     __end_of_x_delay_ms:
   539                           	opt stack 0
   540                           tblptru	equ	0xFF8
   541                           tblptrh	equ	0xFF7
   542                           tblptrl	equ	0xFF6
   543                           tablat	equ	0xFF5
   544                           prodl	equ	0xFF3
   545                           postinc0	equ	0xFEE
   546                           wreg	equ	0xFE8
   547                           postdec1	equ	0xFE5
   548                           fsr1l	equ	0xFE1
   549                           status	equ	0xFD8
   550                           
   551 ;; *************** function ___awdiv *****************
   552 ;; Defined at:
   553 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awdiv.c"
   554 ;; Parameters:    Size  Location     Type
   555 ;;  dividend        2    0[COMRAM] int 
   556 ;;  divisor         2    2[COMRAM] int 
   557 ;; Auto vars:     Size  Location     Type
   558 ;;  quotient        2    6[COMRAM] int 
   559 ;;  sign            1    5[COMRAM] unsigned char 
   560 ;;  counter         1    4[COMRAM] unsigned char 
   561 ;; Return value:  Size  Location     Type
   562 ;;                  2    0[COMRAM] int 
   563 ;; Registers used:
   564 ;;		wreg, status,2, status,0, prodl
   565 ;; Tracked objects:
   566 ;;		On entry : 0/0
   567 ;;		On exit  : 0/0
   568 ;;		Unchanged: 0/0
   569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   570 ;;      Params:         4       0       0       0       0       0       0       0       0
   571 ;;      Locals:         4       0       0       0       0       0       0       0       0
   572 ;;      Temps:          0       0       0       0       0       0       0       0       0
   573 ;;      Totals:         8       0       0       0       0       0       0       0       0
   574 ;;Total ram usage:        8 bytes
   575 ;; Hardware stack levels used:    1
   576 ;; This function calls:
   577 ;;		Nothing
   578 ;; This function is called by:
   579 ;;		_x_delay_ms
   580 ;; This function uses a non-reentrant model
   581 ;;
   582                           
   583                           	psect	text2
   584  007B6C                     __ptext2:
   585                           	opt stack 0
   586  007B6C                     ___awdiv:
   587                           	opt stack 28
   588                           
   589                           ;incstack = 0
   590  007B6C  0E00               	movlw	0
   591  007B6E  6E38               	movwf	___awdiv@sign,c
   592  007B70  5036               	movf	___awdiv@divisor+1,w,c
   593  007B72  0A80               	xorlw	128
   594  007B74  6EF3               	movwf	prodl,c
   595  007B76  0E80               	movlw	128
   596  007B78  5CF3               	subwf	prodl,w,c
   597  007B7A  0E00               	movlw	0
   598  007B7C  B4D8               	btfsc	status,2,c
   599  007B7E  5C35               	subwf	___awdiv@divisor,w,c
   600  007B80  B0D8               	btfsc	status,0,c
   601  007B82  D006               	goto	l771
   602  007B84  6C35               	negf	___awdiv@divisor,c
   603  007B86  1E36               	comf	___awdiv@divisor+1,f,c
   604  007B88  B0D8               	btfsc	status,0,c
   605  007B8A  2A36               	incf	___awdiv@divisor+1,f,c
   606  007B8C  0E01               	movlw	1
   607  007B8E  6E38               	movwf	___awdiv@sign,c
   608  007B90                     l771:
   609  007B90  5034               	movf	___awdiv@dividend+1,w,c
   610  007B92  0A80               	xorlw	128
   611  007B94  6EF3               	movwf	prodl,c
   612  007B96  0E80               	movlw	128
   613  007B98  5CF3               	subwf	prodl,w,c
   614  007B9A  0E00               	movlw	0
   615  007B9C  B4D8               	btfsc	status,2,c
   616  007B9E  5C33               	subwf	___awdiv@dividend,w,c
   617  007BA0  B0D8               	btfsc	status,0,c
   618  007BA2  D006               	goto	l777
   619  007BA4  6C33               	negf	___awdiv@dividend,c
   620  007BA6  1E34               	comf	___awdiv@dividend+1,f,c
   621  007BA8  B0D8               	btfsc	status,0,c
   622  007BAA  2A34               	incf	___awdiv@dividend+1,f,c
   623  007BAC  0E01               	movlw	1
   624  007BAE  1A38               	xorwf	___awdiv@sign,f,c
   625  007BB0                     l777:
   626  007BB0  0E00               	movlw	0
   627  007BB2  6E3A               	movwf	___awdiv@quotient+1,c
   628  007BB4  0E00               	movlw	0
   629  007BB6  6E39               	movwf	___awdiv@quotient,c
   630  007BB8  5036               	movf	___awdiv@divisor+1,w,c
   631  007BBA  1035               	iorwf	___awdiv@divisor,w,c
   632  007BBC  B4D8               	btfsc	status,2,c
   633  007BBE  D01C               	goto	l799
   634  007BC0  0E01               	movlw	1
   635  007BC2  6E37               	movwf	___awdiv@counter,c
   636  007BC4  D004               	goto	l785
   637  007BC6                     l783:
   638  007BC6  90D8               	bcf	status,0,c
   639  007BC8  3635               	rlcf	___awdiv@divisor,f,c
   640  007BCA  3636               	rlcf	___awdiv@divisor+1,f,c
   641  007BCC  2A37               	incf	___awdiv@counter,f,c
   642  007BCE                     l785:
   643  007BCE  AE36               	btfss	___awdiv@divisor+1,7,c
   644  007BD0  D7FA               	goto	l783
   645  007BD2                     l787:
   646  007BD2  90D8               	bcf	status,0,c
   647  007BD4  3639               	rlcf	___awdiv@quotient,f,c
   648  007BD6  363A               	rlcf	___awdiv@quotient+1,f,c
   649  007BD8  5035               	movf	___awdiv@divisor,w,c
   650  007BDA  5C33               	subwf	___awdiv@dividend,w,c
   651  007BDC  5036               	movf	___awdiv@divisor+1,w,c
   652  007BDE  5834               	subwfb	___awdiv@dividend+1,w,c
   653  007BE0  A0D8               	btfss	status,0,c
   654  007BE2  D005               	goto	l795
   655  007BE4  5035               	movf	___awdiv@divisor,w,c
   656  007BE6  5E33               	subwf	___awdiv@dividend,f,c
   657  007BE8  5036               	movf	___awdiv@divisor+1,w,c
   658  007BEA  5A34               	subwfb	___awdiv@dividend+1,f,c
   659  007BEC  8039               	bsf	___awdiv@quotient,0,c
   660  007BEE                     l795:
   661  007BEE  90D8               	bcf	status,0,c
   662  007BF0  3236               	rrcf	___awdiv@divisor+1,f,c
   663  007BF2  3235               	rrcf	___awdiv@divisor,f,c
   664  007BF4  2E37               	decfsz	___awdiv@counter,f,c
   665  007BF6  D7ED               	goto	l787
   666  007BF8                     l799:
   667  007BF8  5038               	movf	___awdiv@sign,w,c
   668  007BFA  B4D8               	btfsc	status,2,c
   669  007BFC  D004               	goto	l803
   670  007BFE  6C39               	negf	___awdiv@quotient,c
   671  007C00  1E3A               	comf	___awdiv@quotient+1,f,c
   672  007C02  B0D8               	btfsc	status,0,c
   673  007C04  2A3A               	incf	___awdiv@quotient+1,f,c
   674  007C06                     l803:
   675  007C06  C039  F033         	movff	___awdiv@quotient,?___awdiv
   676  007C0A  C03A  F034         	movff	___awdiv@quotient+1,?___awdiv+1
   677  007C0E  0012               	return	
   678  007C10                     __end_of___awdiv:
   679                           	opt stack 0
   680                           tblptru	equ	0xFF8
   681                           tblptrh	equ	0xFF7
   682                           tblptrl	equ	0xFF6
   683                           tablat	equ	0xFF5
   684                           prodl	equ	0xFF3
   685                           postinc0	equ	0xFEE
   686                           wreg	equ	0xFE8
   687                           postdec1	equ	0xFE5
   688                           fsr1l	equ	0xFE1
   689                           status	equ	0xFD8
   690                           
   691 ;; *************** function _putsUSART *****************
   692 ;; Defined at:
   693 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\USART\uputs.c"
   694 ;; Parameters:    Size  Location     Type
   695 ;;  data            2    1[COMRAM] PTR unsigned char 
   696 ;;		 -> Rxdata(25), Txdata(16), 
   697 ;; Auto vars:     Size  Location     Type
   698 ;;		None
   699 ;; Return value:  Size  Location     Type
   700 ;;		None               void
   701 ;; Registers used:
   702 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   703 ;; Tracked objects:
   704 ;;		On entry : 0/0
   705 ;;		On exit  : 0/0
   706 ;;		Unchanged: 0/0
   707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   708 ;;      Params:         2       0       0       0       0       0       0       0       0
   709 ;;      Locals:         0       0       0       0       0       0       0       0       0
   710 ;;      Temps:          0       0       0       0       0       0       0       0       0
   711 ;;      Totals:         2       0       0       0       0       0       0       0       0
   712 ;;Total ram usage:        2 bytes
   713 ;; Hardware stack levels used:    1
   714 ;; Hardware stack levels required when called:    1
   715 ;; This function calls:
   716 ;;		_WriteUSART
   717 ;; This function is called by:
   718 ;;		_main
   719 ;; This function uses a non-reentrant model
   720 ;;
   721                           
   722                           	psect	text3
   723  007A36                     __ptext3:
   724                           	opt stack 0
   725  007A36                     _putsUSART:
   726                           	opt stack 28
   727  007A36                     l117:
   728  007A36  A2AC               	btfss	4012,1,c	;volatile
   729  007A38  D7FE               	goto	l117
   730  007A3A  C034  FFD9         	movff	putsUSART@data,fsr2l
   731  007A3E  C035  FFDA         	movff	putsUSART@data+1,fsr2h
   732  007A42  50DF               	movf	indf2,w,c
   733  007A44  ECF7  F03C         	call	_WriteUSART
   734  007A48  C034  FFD9         	movff	putsUSART@data,fsr2l
   735  007A4C  C035  FFDA         	movff	putsUSART@data+1,fsr2h
   736  007A50  4A34               	infsnz	putsUSART@data,f,c
   737  007A52  2A35               	incf	putsUSART@data+1,f,c
   738  007A54  50DF               	movf	indf2,w,c
   739  007A56  B4D8               	btfsc	status,2,c
   740  007A58  0012               	return	
   741  007A5A  D7ED               	goto	l117
   742  007A5C                     __end_of_putsUSART:
   743                           	opt stack 0
   744                           tblptru	equ	0xFF8
   745                           tblptrh	equ	0xFF7
   746                           tblptrl	equ	0xFF6
   747                           tablat	equ	0xFF5
   748                           prodl	equ	0xFF3
   749                           postinc0	equ	0xFEE
   750                           wreg	equ	0xFE8
   751                           postdec1	equ	0xFE5
   752                           fsr1l	equ	0xFE1
   753                           indf2	equ	0xFDF
   754                           fsr2h	equ	0xFDA
   755                           fsr2l	equ	0xFD9
   756                           status	equ	0xFD8
   757                           
   758 ;; *************** function _WriteUSART *****************
   759 ;; Defined at:
   760 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\USART\uwrite.c"
   761 ;; Parameters:    Size  Location     Type
   762 ;;  data            1    wreg     unsigned char 
   763 ;; Auto vars:     Size  Location     Type
   764 ;;  data            1    0[COMRAM] unsigned char 
   765 ;; Return value:  Size  Location     Type
   766 ;;		None               void
   767 ;; Registers used:
   768 ;;		wreg
   769 ;; Tracked objects:
   770 ;;		On entry : 0/0
   771 ;;		On exit  : 0/0
   772 ;;		Unchanged: 0/0
   773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   774 ;;      Params:         0       0       0       0       0       0       0       0       0
   775 ;;      Locals:         1       0       0       0       0       0       0       0       0
   776 ;;      Temps:          0       0       0       0       0       0       0       0       0
   777 ;;      Totals:         1       0       0       0       0       0       0       0       0
   778 ;;Total ram usage:        1 bytes
   779 ;; Hardware stack levels used:    1
   780 ;; This function calls:
   781 ;;		Nothing
   782 ;; This function is called by:
   783 ;;		_putsUSART
   784 ;; This function uses a non-reentrant model
   785 ;;
   786                           
   787                           	psect	text4
   788  0079EE                     __ptext4:
   789                           	opt stack 0
   790  0079EE                     _WriteUSART:
   791                           	opt stack 28
   792                           
   793                           ;incstack = 0
   794                           ;WriteUSART@data stored from wreg
   795  0079EE  6E33               	movwf	WriteUSART@data,c
   796  0079F0  ACAC               	btfss	4012,6,c	;volatile
   797  0079F2  D003               	goto	l761
   798  0079F4  90AC               	bcf	4012,0,c	;volatile
   799  0079F6  B202               	btfsc	_USART_Status,1,c
   800  0079F8  80AC               	bsf	4012,0,c	;volatile
   801  0079FA                     l761:
   802  0079FA  C033  FFAD         	movff	WriteUSART@data,4013	;volatile
   803  0079FE  0012               	return	
   804  007A00                     __end_of_WriteUSART:
   805                           	opt stack 0
   806                           tblptru	equ	0xFF8
   807                           tblptrh	equ	0xFF7
   808                           tblptrl	equ	0xFF6
   809                           tablat	equ	0xFF5
   810                           prodl	equ	0xFF3
   811                           postinc0	equ	0xFEE
   812                           wreg	equ	0xFE8
   813                           postdec1	equ	0xFE5
   814                           fsr1l	equ	0xFE1
   815                           indf2	equ	0xFDF
   816                           fsr2h	equ	0xFDA
   817                           fsr2l	equ	0xFD9
   818                           status	equ	0xFD8
   819                           
   820 ;; *************** function _getsUSART *****************
   821 ;; Defined at:
   822 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\USART\ugets.c"
   823 ;; Parameters:    Size  Location     Type
   824 ;;  buffer          2    1[COMRAM] PTR unsigned char 
   825 ;;		 -> Rxdata(25), 
   826 ;;  len             1    3[COMRAM] unsigned char 
   827 ;; Auto vars:     Size  Location     Type
   828 ;;  i               1    5[COMRAM] unsigned char 
   829 ;;  data            1    4[COMRAM] unsigned char 
   830 ;; Return value:  Size  Location     Type
   831 ;;		None               void
   832 ;; Registers used:
   833 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   834 ;; Tracked objects:
   835 ;;		On entry : 0/0
   836 ;;		On exit  : 0/0
   837 ;;		Unchanged: 0/0
   838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   839 ;;      Params:         3       0       0       0       0       0       0       0       0
   840 ;;      Locals:         2       0       0       0       0       0       0       0       0
   841 ;;      Temps:          0       0       0       0       0       0       0       0       0
   842 ;;      Totals:         5       0       0       0       0       0       0       0       0
   843 ;;Total ram usage:        5 bytes
   844 ;; Hardware stack levels used:    1
   845 ;; Hardware stack levels required when called:    1
   846 ;; This function calls:
   847 ;;		_ReadUSART
   848 ;; This function is called by:
   849 ;;		_main
   850 ;; This function uses a non-reentrant model
   851 ;;
   852                           
   853                           	psect	text5
   854  007A5C                     __ptext5:
   855                           	opt stack 0
   856  007A5C                     _getsUSART:
   857                           	opt stack 28
   858                           
   859                           ;incstack = 0
   860  007A5C  0E00               	movlw	0
   861  007A5E  6E38               	movwf	getsUSART@i,c
   862  007A60  D00E               	goto	l881
   863  007A62                     l72:
   864  007A62  AA9E               	btfss	3998,5,c	;volatile
   865  007A64  D7FE               	goto	l72
   866  007A66  EC0C  F03D         	call	_ReadUSART	;wreg free
   867  007A6A  6E37               	movwf	getsUSART@data,c
   868  007A6C  C034  FFD9         	movff	getsUSART@buffer,fsr2l
   869  007A70  C035  FFDA         	movff	getsUSART@buffer+1,fsr2h
   870  007A74  C037  FFDF         	movff	getsUSART@data,indf2
   871  007A78  4A34               	infsnz	getsUSART@buffer,f,c
   872  007A7A  2A35               	incf	getsUSART@buffer+1,f,c
   873  007A7C  2A38               	incf	getsUSART@i,f,c
   874  007A7E                     l881:
   875  007A7E  5036               	movf	getsUSART@len,w,c
   876  007A80  5C38               	subwf	getsUSART@i,w,c
   877  007A82  B0D8               	btfsc	status,0,c
   878  007A84  0012               	return	
   879  007A86  D7ED               	goto	l72
   880  007A88                     __end_of_getsUSART:
   881                           	opt stack 0
   882                           tblptru	equ	0xFF8
   883                           tblptrh	equ	0xFF7
   884                           tblptrl	equ	0xFF6
   885                           tablat	equ	0xFF5
   886                           prodl	equ	0xFF3
   887                           postinc0	equ	0xFEE
   888                           wreg	equ	0xFE8
   889                           postdec1	equ	0xFE5
   890                           fsr1l	equ	0xFE1
   891                           indf2	equ	0xFDF
   892                           fsr2h	equ	0xFDA
   893                           fsr2l	equ	0xFD9
   894                           status	equ	0xFD8
   895                           
   896 ;; *************** function _ReadUSART *****************
   897 ;; Defined at:
   898 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\USART\uread.c"
   899 ;; Parameters:    Size  Location     Type
   900 ;;		None
   901 ;; Auto vars:     Size  Location     Type
   902 ;;  data            1    0[COMRAM] unsigned char 
   903 ;; Return value:  Size  Location     Type
   904 ;;                  1    wreg      unsigned char 
   905 ;; Registers used:
   906 ;;		wreg, status,2, status,0
   907 ;; Tracked objects:
   908 ;;		On entry : 0/0
   909 ;;		On exit  : 0/0
   910 ;;		Unchanged: 0/0
   911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   912 ;;      Params:         0       0       0       0       0       0       0       0       0
   913 ;;      Locals:         1       0       0       0       0       0       0       0       0
   914 ;;      Temps:          0       0       0       0       0       0       0       0       0
   915 ;;      Totals:         1       0       0       0       0       0       0       0       0
   916 ;;Total ram usage:        1 bytes
   917 ;; Hardware stack levels used:    1
   918 ;; This function calls:
   919 ;;		Nothing
   920 ;; This function is called by:
   921 ;;		_getsUSART
   922 ;; This function uses a non-reentrant model
   923 ;;
   924                           
   925                           	psect	text6
   926  007A18                     __ptext6:
   927                           	opt stack 0
   928  007A18                     _ReadUSART:
   929                           	opt stack 28
   930                           
   931                           ;incstack = 0
   932  007A18  0EF2               	movlw	242
   933  007A1A  1602               	andwf	_USART_Status,f,c
   934  007A1C  ACAB               	btfss	4011,6,c	;volatile
   935  007A1E  D003               	goto	l130
   936  007A20  9002               	bcf	_USART_Status,0,c
   937  007A22  B0AB               	btfsc	4011,0,c	;volatile
   938  007A24  8002               	bsf	_USART_Status,0,c
   939  007A26                     l130:
   940  007A26  B4AB               	btfsc	4011,2,c	;volatile
   941  007A28  8402               	bsf	_USART_Status,2,c
   942  007A2A  B2AB               	btfsc	4011,1,c	;volatile
   943  007A2C  8602               	bsf	_USART_Status,3,c
   944  007A2E  CFAE F033          	movff	4014,ReadUSART@data	;volatile
   945  007A32  5033               	movf	ReadUSART@data,w,c
   946  007A34  0012               	return	
   947  007A36                     __end_of_ReadUSART:
   948                           	opt stack 0
   949                           tblptru	equ	0xFF8
   950                           tblptrh	equ	0xFF7
   951                           tblptrl	equ	0xFF6
   952                           tablat	equ	0xFF5
   953                           prodl	equ	0xFF3
   954                           postinc0	equ	0xFEE
   955                           wreg	equ	0xFE8
   956                           postdec1	equ	0xFE5
   957                           fsr1l	equ	0xFE1
   958                           indf2	equ	0xFDF
   959                           fsr2h	equ	0xFDA
   960                           fsr2l	equ	0xFD9
   961                           status	equ	0xFD8
   962                           
   963 ;; *************** function _baudUSART *****************
   964 ;; Defined at:
   965 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\USART\ubaud.c"
   966 ;; Parameters:    Size  Location     Type
   967 ;;  baudconfig      1    wreg     unsigned char 
   968 ;; Auto vars:     Size  Location     Type
   969 ;;  baudconfig      1    0[COMRAM] unsigned char 
   970 ;; Return value:  Size  Location     Type
   971 ;;		None               void
   972 ;; Registers used:
   973 ;;		wreg
   974 ;; Tracked objects:
   975 ;;		On entry : 0/0
   976 ;;		On exit  : 0/0
   977 ;;		Unchanged: 0/0
   978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   979 ;;      Params:         0       0       0       0       0       0       0       0       0
   980 ;;      Locals:         1       0       0       0       0       0       0       0       0
   981 ;;      Temps:          0       0       0       0       0       0       0       0       0
   982 ;;      Totals:         1       0       0       0       0       0       0       0       0
   983 ;;Total ram usage:        1 bytes
   984 ;; Hardware stack levels used:    1
   985 ;; This function calls:
   986 ;;		Nothing
   987 ;; This function is called by:
   988 ;;		_main
   989 ;; This function uses a non-reentrant model
   990 ;;
   991                           
   992                           	psect	text7
   993  0079E6                     __ptext7:
   994                           	opt stack 0
   995  0079E6                     _baudUSART:
   996                           	opt stack 29
   997                           
   998                           ;incstack = 0
   999                           ;baudUSART@baudconfig stored from wreg
  1000  0079E6  6E33               	movwf	baudUSART@baudconfig,c
  1001  0079E8  C033  FFB8         	movff	baudUSART@baudconfig,4024	;volatile
  1002  0079EC  0012               	return	
  1003  0079EE                     __end_of_baudUSART:
  1004                           	opt stack 0
  1005                           tblptru	equ	0xFF8
  1006                           tblptrh	equ	0xFF7
  1007                           tblptrl	equ	0xFF6
  1008                           tablat	equ	0xFF5
  1009                           prodl	equ	0xFF3
  1010                           postinc0	equ	0xFEE
  1011                           wreg	equ	0xFE8
  1012                           postdec1	equ	0xFE5
  1013                           fsr1l	equ	0xFE1
  1014                           indf2	equ	0xFDF
  1015                           fsr2h	equ	0xFDA
  1016                           fsr2l	equ	0xFD9
  1017                           status	equ	0xFD8
  1018                           
  1019 ;; *************** function _OpenUSART *****************
  1020 ;; Defined at:
  1021 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\USART\uopen.c"
  1022 ;; Parameters:    Size  Location     Type
  1023 ;;  config          1    wreg     unsigned char 
  1024 ;;  spbrg           2    0[COMRAM] unsigned int 
  1025 ;; Auto vars:     Size  Location     Type
  1026 ;;  config          1    5[COMRAM] unsigned char 
  1027 ;; Return value:  Size  Location     Type
  1028 ;;		None               void
  1029 ;; Registers used:
  1030 ;;		wreg, status,2
  1031 ;; Tracked objects:
  1032 ;;		On entry : 0/0
  1033 ;;		On exit  : 0/0
  1034 ;;		Unchanged: 0/0
  1035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1036 ;;      Params:         2       0       0       0       0       0       0       0       0
  1037 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1038 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1039 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1040 ;;Total ram usage:        6 bytes
  1041 ;; Hardware stack levels used:    1
  1042 ;; This function calls:
  1043 ;;		Nothing
  1044 ;; This function is called by:
  1045 ;;		_main
  1046 ;; This function uses a non-reentrant model
  1047 ;;
  1048                           
  1049                           	psect	text8
  1050  007B04                     __ptext8:
  1051                           	opt stack 0
  1052  007B04                     _OpenUSART:
  1053                           	opt stack 29
  1054                           
  1055                           ;incstack = 0
  1056                           ;OpenUSART@config stored from wreg
  1057  007B04  6E38               	movwf	OpenUSART@config,c
  1058  007B06  0E00               	movlw	0
  1059  007B08  6EAC               	movwf	4012,c	;volatile
  1060  007B0A  0E00               	movlw	0
  1061  007B0C  6EAB               	movwf	4011,c	;volatile
  1062  007B0E  B038               	btfsc	OpenUSART@config,0,c
  1063  007B10  88AC               	bsf	4012,4,c	;volatile
  1064  007B12  A238               	btfss	OpenUSART@config,1,c
  1065  007B14  D002               	goto	l825
  1066  007B16  8CAC               	bsf	4012,6,c	;volatile
  1067  007B18  8CAB               	bsf	4011,6,c	;volatile
  1068  007B1A                     l825:
  1069  007B1A  B438               	btfsc	OpenUSART@config,2,c
  1070  007B1C  8EAC               	bsf	4012,7,c	;volatile
  1071  007B1E  A638               	btfss	OpenUSART@config,3,c
  1072  007B20  D002               	goto	l100
  1073  007B22  88AB               	bsf	4011,4,c	;volatile
  1074  007B24  D001               	goto	l833
  1075  007B26                     l100:
  1076  007B26  8AAB               	bsf	4011,5,c	;volatile
  1077  007B28                     l833:
  1078  007B28  B838               	btfsc	OpenUSART@config,4,c
  1079  007B2A  84AC               	bsf	4012,2,c	;volatile
  1080  007B2C  989E               	bcf	3998,4,c	;volatile
  1081  007B2E  BA38               	btfsc	OpenUSART@config,5,c
  1082  007B30  86AB               	bsf	4011,3,c	;volatile
  1083  007B32  AC38               	btfss	OpenUSART@config,6,c
  1084  007B34  D002               	goto	l104
  1085  007B36  8A9D               	bsf	3997,5,c	;volatile
  1086  007B38  D001               	goto	l105
  1087  007B3A                     l104:
  1088  007B3A  9A9D               	bcf	3997,5,c	;volatile
  1089  007B3C                     l105:
  1090  007B3C  9A9E               	bcf	3998,5,c	;volatile
  1091  007B3E  AE38               	btfss	OpenUSART@config,7,c
  1092  007B40  D002               	goto	l106
  1093  007B42  889D               	bsf	3997,4,c	;volatile
  1094  007B44  D001               	goto	l107
  1095  007B46                     l106:
  1096  007B46  989D               	bcf	3997,4,c	;volatile
  1097  007B48                     l107:
  1098  007B48  C033  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  1099  007B4C  C034  F035         	movff	OpenUSART@spbrg+1,??_OpenUSART
  1100  007B50  C035  F036         	movff	??_OpenUSART,??_OpenUSART+1
  1101  007B54  6A37               	clrf	(??_OpenUSART+2)& (0+255),c
  1102  007B56  5036               	movf	??_OpenUSART+1,w,c
  1103  007B58  6EB0               	movwf	4016,c	;volatile
  1104  007B5A  8AAC               	bsf	4012,5,c	;volatile
  1105  007B5C  8EAB               	bsf	4011,7,c	;volatile
  1106  007B5E  9C94               	bcf	3988,6,c	;volatile
  1107  007B60  8E94               	bsf	3988,7,c	;volatile
  1108  007B62  B8AC               	btfsc	4012,4,c	;volatile
  1109  007B64  BEAC               	btfsc	4012,7,c	;volatile
  1110  007B66  D001               	goto	l109
  1111  007B68  8C94               	bsf	3988,6,c	;volatile
  1112  007B6A                     l109:
  1113  007B6A  0012               	return	
  1114  007B6C                     __end_of_OpenUSART:
  1115                           	opt stack 0
  1116  0000                     tblptru	equ	0xFF8
  1117                           tblptrh	equ	0xFF7
  1118                           tblptrl	equ	0xFF6
  1119                           tablat	equ	0xFF5
  1120                           prodl	equ	0xFF3
  1121                           postinc0	equ	0xFEE
  1122                           wreg	equ	0xFE8
  1123                           postdec1	equ	0xFE5
  1124                           fsr1l	equ	0xFE1
  1125                           indf2	equ	0xFDF
  1126                           fsr2h	equ	0xFDA
  1127                           fsr2l	equ	0xFD9
  1128                           status	equ	0xFD8
  1129                           tblptru	equ	0xFF8
  1130                           tblptrh	equ	0xFF7
  1131                           tblptrl	equ	0xFF6
  1132                           tablat	equ	0xFF5
  1133                           prodl	equ	0xFF3
  1134                           postinc0	equ	0xFEE
  1135                           wreg	equ	0xFE8
  1136                           postdec1	equ	0xFE5
  1137                           fsr1l	equ	0xFE1
  1138                           indf2	equ	0xFDF
  1139                           fsr2h	equ	0xFDA
  1140                           fsr2l	equ	0xFD9
  1141                           status	equ	0xFD8
  1142                           
  1143                           	psect	rparam
  1144  0000                     tblptru	equ	0xFF8
  1145                           tblptrh	equ	0xFF7
  1146                           tblptrl	equ	0xFF6
  1147                           tablat	equ	0xFF5
  1148                           prodl	equ	0xFF3
  1149                           postinc0	equ	0xFEE
  1150                           wreg	equ	0xFE8
  1151                           postdec1	equ	0xFE5
  1152                           fsr1l	equ	0xFE1
  1153                           indf2	equ	0xFDF
  1154                           fsr2h	equ	0xFDA
  1155                           fsr2l	equ	0xFD9
  1156                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        23
    BSS         27
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     17      67
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           239      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    putsUSART@data	PTR unsigned char  size(2) Largest target is 25
		 -> Rxdata(COMRAM[25]), Txdata(COMRAM[16]), 

    getsUSART@buffer	PTR unsigned char  size(2) Largest target is 25
		 -> Rxdata(COMRAM[25]), 


Critical Paths under _main in COMRAM

    _main->_x_delay_ms
    _x_delay_ms->___awdiv
    _putsUSART->_WriteUSART
    _getsUSART->_ReadUSART

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    1501
                                             13 COMRAM     4     4      0
                          _OpenUSART
                          _baudUSART
                          _getsUSART
                          _putsUSART
                         _x_delay_ms
 ---------------------------------------------------------------------------------
 (1) _x_delay_ms                                           5     3      2     384
                                              8 COMRAM     5     3      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     301
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _putsUSART                                            2     0      2     363
                                              1 COMRAM     2     0      2
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (2) _WriteUSART                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _getsUSART                                            5     2      3     393
                                              1 COMRAM     5     2      3
                          _ReadUSART
 ---------------------------------------------------------------------------------
 (2) _ReadUSART                                            1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _baudUSART                                            1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     256
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenUSART
   _baudUSART
   _getsUSART
     _ReadUSART
   _putsUSART
     _WriteUSART
   _x_delay_ms
     ___awdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM_1           400      0       0      21        0.0%
BIGRAM             3EE      0       0      22        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK3            EF      0       0      12        0.0%
BANK3               EF      0       0      10        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     11      43       1       70.5%
BITSFR_5             0      0       0      40        0.0%
SFR_5                0      0       0      40        0.0%
BITSFR_4             0      0       0      40        0.0%
SFR_4                0      0       0      40        0.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      43      11        0.0%
DATA                 0      0      43       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Fri Nov 14 11:01:01 2014

                     l40 7C62                       l43 7C90                       l52 7CE0  
                     l37 7C42                       l46 7CB0                       l72 7A62  
                     l49 7CC0             ___awdiv@sign 0038              __CFG_BORV$0 000000  
           __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000  
           __CFG_CP3$OFF 000000                      l100 7B26                      l104 7B3A  
                    l105 7B3C                      l106 7B46                      l130 7A26  
                    l107 7B48                      l109 7B6A                      l117 7A36  
                    l803 7C06                      l813 7AEE                      l833 7B28  
                    l825 7B1A                      l761 79FA                      l809 7AD8  
                    l771 7B90                      l917 7CF0                      l783 7BC6  
                    l881 7A7E                      l785 7BCE                      l777 7BB0  
                    l795 7BEE                      l787 7BD2                      l799 7BF8  
           getsUSART@len 0036             __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000  
                    u347 7ADE             __CFG_BOR$OFF 000000                      wreg 000FE8  
           __CFG_LVP$OFF 000000               _CaracterRx 0001             __CFG_WDT$OFF 000000  
          getsUSART@data 0037                     _PIE1 000F9D             __CFG_PWRT$ON 000000  
                   _main 7C10                     fsr2h 000FDA                     fsr1l 000FE1  
                   indf2 000FDF                     fsr2l 000FD9      baudUSART@baudconfig 0033  
                   prodl 000FF3                     start 0002            __CFG_IESO$OFF 000000  
          __CFG_MCLRE$ON 000000            __CFG_PLLDIV$5 000000                    ?_main 0033  
        __end_of___awdiv 7C10          ___awdiv@divisor 0035          ___awdiv@counter 0037  
                  _RCREG 000FAE                    _RCSTA 000FAB                    _SPBRG 000FAF  
          __CFG_USBDIV$1 000000                    _TRISC 000F94                    _TXREG 000FAD  
                  _TXSTA 000FAC            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000                    tablat 000FF5  
                  status 000FD8           WriteUSART@data 0033          __initialization 7A88  
           __end_of_main 7D00           x_delay_ms@cont 003E                   ??_main 0040  
          __activetblptr 000000          __CFG_CCP2MX$OFF 000000         ___awdiv@dividend 0033  
        getsUSART@buffer 0034       __size_of_ReadUSART 001E                   _SPBRGH 000FB0  
         __CFG_VREGEN$ON 000000           __CFG_XINST$OFF 000000                   _Rxdata 0003  
     __size_of_OpenUSART 0068                   _Txdata 0023                ??___awdiv 0037  
                 clear_0 7A8E         ___awdiv@quotient 0039             __pdataCOMRAM 001C  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
             __accesstop 0060  __end_of__initialization 7AB4          __CFG_PBADEN$OFF 000000  
     __size_of_baudUSART 0008               _WriteUSART 79EE           __pcstackCOMRAM 0033  
         main@baudconfig 0043        __end_of_ReadUSART 7A36       __size_of_getsUSART 002C  
          ReadUSART@data 0033        __end_of_OpenUSART 7B6C            putsUSART@data 0034  
                _BAUDCON 000FB8        __end_of_baudUSART 79EE       __size_of_putsUSART 0026  
            x_delay_ms@x 003B                  __Hparam 0000                  __Lparam 0000  
      __end_of_getsUSART 7A88              ?_WriteUSART 0033                  ___awdiv 7B6C  
        __CFG_STVREN$OFF 000000                  __pcinit 7A88                  __ramtop 0800  
                __ptext0 7C10                  __ptext1 7ABA                  __ptext2 7B6C  
                __ptext3 7A36                  __ptext4 79EE                  __ptext5 7A5C  
                __ptext6 7A18                  __ptext7 79E6                  __ptext8 7B04  
   end_of_initialization 7AB4               _x_delay_ms 7ABA                _RCSTAbits 000FAB  
                postdec1 000FE5                  postinc0 000FEE        __end_of_putsUSART 7A5C  
              _PORTCbits 000F82                _TRISCbits 000F94               getsUSART@i 0038  
    __size_of_WriteUSART 0012               main@config 0042                _TXSTAbits 000FAC  
          __pidataCOMRAM 7A01      start_initialization 7A88                _ReadUSART 7A18  
              _MensajeTx 001C                _OpenUSART 7B04              ?_x_delay_ms 003B  
       __CFG_LPT1OSC$OFF 000000              __pbssCOMRAM 0001               ?_ReadUSART 0033  
              _baudUSART 79E6               ?_OpenUSART 0033             ??_WriteUSART 0033  
               ?___awdiv 0033                _getsUSART 7A5C      __size_of_x_delay_ms 004A  
     __end_of_WriteUSART 7A00               ?_baudUSART 0033                 _PIE1bits 000F9D  
               _PIR1bits 000F9E         __CFG_WDTPS$32768 000000               ?_getsUSART 0034  
              _putsUSART 7A36              ??_ReadUSART 0033                main@spbrg 0040  
              copy_data0 7AA8              ??_OpenUSART 0035          OpenUSART@config 0038  
               __Hrparam 0000                 __Lrparam 0000         __size_of___awdiv 00A4  
             ?_putsUSART 0034              ??_baudUSART 0033            __size_of_main 00F0  
           ??_x_delay_ms 003D              ??_getsUSART 0037    __CFG_CPUDIV$OSC1_PLL2 000000  
     __end_of_x_delay_ms 7B04           OpenUSART@spbrg 0033              ??_putsUSART 0036  
     __CFG_FOSC$HSPLL_HS 000000             _USART_Status 0002  
